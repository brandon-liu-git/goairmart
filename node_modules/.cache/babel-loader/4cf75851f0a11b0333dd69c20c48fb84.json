{"ast":null,"code":"import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { CheckOutline, CloseOutline } from 'antd-mobile-icons';\nimport Loading from '../loading';\nimport Mask from '../mask';\nimport { mergeProps } from '../../utils/with-default-props';\nvar classPrefix = \"adm-toast\";\nvar defaultProps = {\n  maskClickable: true,\n  stopPropagation: ['click']\n};\nexport var InternalToast = function InternalToast(p) {\n  var props = mergeProps(defaultProps, p);\n  var maskClickable = props.maskClickable,\n      content = props.content,\n      icon = props.icon,\n      position = props.position;\n  var iconElement = useMemo(function () {\n    if (icon === null || icon === undefined) return null;\n\n    switch (icon) {\n      case 'success':\n        return /*#__PURE__*/React.createElement(CheckOutline, null);\n\n      case 'fail':\n        return /*#__PURE__*/React.createElement(CloseOutline, null);\n\n      case 'loading':\n        return /*#__PURE__*/React.createElement(Loading, {\n          color: 'white',\n          className: classPrefix + \"-loading\"\n        });\n\n      default:\n        return icon;\n    }\n  }, [icon]);\n  var top = useMemo(function () {\n    switch (position) {\n      case 'top':\n        return '20%';\n\n      case 'bottom':\n        return '80%';\n\n      default:\n        return '50%';\n    }\n  }, [position]);\n  return /*#__PURE__*/React.createElement(Mask, {\n    visible: props.visible,\n    destroyOnClose: true,\n    opacity: 0,\n    disableBodyScroll: !maskClickable,\n    getContainer: props.getContainer,\n    afterClose: props.afterClose,\n    style: Object.assign({\n      pointerEvents: maskClickable ? 'none' : 'auto'\n    }, props.maskStyle),\n    className: classNames(classPrefix + \"-mask\", props.maskClassName),\n    stopPropagation: props.stopPropagation\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      top: top\n    },\n    className: classNames(classPrefix + \"-wrap\", icon ? classPrefix + \"-wrap-icon\" : classPrefix + \"-wrap-text\")\n  }, iconElement && /*#__PURE__*/React.createElement(\"div\", {\n    className: classPrefix + \"-icon\"\n  }, iconElement), content));\n};","map":{"version":3,"sources":["/Users/brandonliu/Project/goairmart/antd-demo/node_modules/antd-mobile/es/components/toast/toast.js"],"names":["React","useMemo","classNames","CheckOutline","CloseOutline","Loading","Mask","mergeProps","classPrefix","defaultProps","maskClickable","stopPropagation","InternalToast","p","props","content","icon","position","iconElement","undefined","createElement","color","className","top","visible","destroyOnClose","opacity","disableBodyScroll","getContainer","afterClose","style","Object","assign","pointerEvents","maskStyle","maskClassName"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { CheckOutline, CloseOutline } from 'antd-mobile-icons';\nimport Loading from '../loading';\nimport Mask from '../mask';\nimport { mergeProps } from '../../utils/with-default-props';\nvar classPrefix = \"adm-toast\";\nvar defaultProps = {\n  maskClickable: true,\n  stopPropagation: ['click']\n};\nexport var InternalToast = function InternalToast(p) {\n  var props = mergeProps(defaultProps, p);\n  var maskClickable = props.maskClickable,\n      content = props.content,\n      icon = props.icon,\n      position = props.position;\n  var iconElement = useMemo(function () {\n    if (icon === null || icon === undefined) return null;\n\n    switch (icon) {\n      case 'success':\n        return /*#__PURE__*/React.createElement(CheckOutline, null);\n\n      case 'fail':\n        return /*#__PURE__*/React.createElement(CloseOutline, null);\n\n      case 'loading':\n        return /*#__PURE__*/React.createElement(Loading, {\n          color: 'white',\n          className: classPrefix + \"-loading\"\n        });\n\n      default:\n        return icon;\n    }\n  }, [icon]);\n  var top = useMemo(function () {\n    switch (position) {\n      case 'top':\n        return '20%';\n\n      case 'bottom':\n        return '80%';\n\n      default:\n        return '50%';\n    }\n  }, [position]);\n  return /*#__PURE__*/React.createElement(Mask, {\n    visible: props.visible,\n    destroyOnClose: true,\n    opacity: 0,\n    disableBodyScroll: !maskClickable,\n    getContainer: props.getContainer,\n    afterClose: props.afterClose,\n    style: Object.assign({\n      pointerEvents: maskClickable ? 'none' : 'auto'\n    }, props.maskStyle),\n    className: classNames(classPrefix + \"-mask\", props.maskClassName),\n    stopPropagation: props.stopPropagation\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      top: top\n    },\n    className: classNames(classPrefix + \"-wrap\", icon ? classPrefix + \"-wrap-icon\" : classPrefix + \"-wrap-text\")\n  }, iconElement && /*#__PURE__*/React.createElement(\"div\", {\n    className: classPrefix + \"-icon\"\n  }, iconElement), content));\n};"]},"metadata":{},"sourceType":"module"}