{"ast":null,"code":"import { useCallback, useRef } from 'react';\nimport { useUpdate } from 'ahooks';\nexport function usePropsValue(options) {\n  var value = options.value,\n      defaultValue = options.defaultValue,\n      onChange = options.onChange;\n  var update = useUpdate();\n  var stateRef = useRef(value !== undefined ? value : defaultValue);\n\n  if (value !== undefined) {\n    stateRef.current = value;\n  }\n\n  var setState = useCallback(function (v) {\n    if (value === undefined) {\n      stateRef.current = v;\n      update();\n    }\n\n    onChange === null || onChange === void 0 ? void 0 : onChange(v);\n  }, [value, update, onChange]);\n  return [stateRef.current, setState];\n}","map":{"version":3,"sources":["/Users/brandonliu/Project/goairmart/antd-demo/node_modules/antd-mobile/es/utils/use-props-value.js"],"names":["useCallback","useRef","useUpdate","usePropsValue","options","value","defaultValue","onChange","update","stateRef","undefined","current","setState","v"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,MAAtB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AACrC,MAAIC,KAAK,GAAGD,OAAO,CAACC,KAApB;AAAA,MACIC,YAAY,GAAGF,OAAO,CAACE,YAD3B;AAAA,MAEIC,QAAQ,GAAGH,OAAO,CAACG,QAFvB;AAGA,MAAIC,MAAM,GAAGN,SAAS,EAAtB;AACA,MAAIO,QAAQ,GAAGR,MAAM,CAACI,KAAK,KAAKK,SAAV,GAAsBL,KAAtB,GAA8BC,YAA/B,CAArB;;AAEA,MAAID,KAAK,KAAKK,SAAd,EAAyB;AACvBD,IAAAA,QAAQ,CAACE,OAAT,GAAmBN,KAAnB;AACD;;AAED,MAAIO,QAAQ,GAAGZ,WAAW,CAAC,UAAUa,CAAV,EAAa;AACtC,QAAIR,KAAK,KAAKK,SAAd,EAAyB;AACvBD,MAAAA,QAAQ,CAACE,OAAT,GAAmBE,CAAnB;AACAL,MAAAA,MAAM;AACP;;AAEDD,IAAAA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACM,CAAD,CAA5D;AACD,GAPyB,EAOvB,CAACR,KAAD,EAAQG,MAAR,EAAgBD,QAAhB,CAPuB,CAA1B;AAQA,SAAO,CAACE,QAAQ,CAACE,OAAV,EAAmBC,QAAnB,CAAP;AACD","sourcesContent":["import { useCallback, useRef } from 'react';\nimport { useUpdate } from 'ahooks';\nexport function usePropsValue(options) {\n  var value = options.value,\n      defaultValue = options.defaultValue,\n      onChange = options.onChange;\n  var update = useUpdate();\n  var stateRef = useRef(value !== undefined ? value : defaultValue);\n\n  if (value !== undefined) {\n    stateRef.current = value;\n  }\n\n  var setState = useCallback(function (v) {\n    if (value === undefined) {\n      stateRef.current = v;\n      update();\n    }\n\n    onChange === null || onChange === void 0 ? void 0 : onChange(v);\n  }, [value, update, onChange]);\n  return [stateRef.current, setState];\n}"]},"metadata":{},"sourceType":"module"}