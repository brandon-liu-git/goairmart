{"ast":null,"code":"var __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nimport { useRef, useEffect } from 'react';\n\nvar EventEmitter =\n/** @class */\nfunction () {\n  function EventEmitter() {\n    var _this = this;\n\n    this.subscriptions = new Set();\n\n    this.emit = function (val) {\n      var e_1, _a;\n\n      try {\n        for (var _b = __values(_this.subscriptions), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var subscription = _c.value;\n          subscription(val);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    };\n\n    this.useSubscription = function (callback) {\n      var callbackRef = useRef();\n      callbackRef.current = callback;\n      useEffect(function () {\n        function subscription(val) {\n          if (callbackRef.current) {\n            callbackRef.current(val);\n          }\n        }\n\n        _this.subscriptions.add(subscription);\n\n        return function () {\n          _this.subscriptions[\"delete\"](subscription);\n        };\n      }, []);\n    };\n  }\n\n  return EventEmitter;\n}();\n\nexport { EventEmitter };\nexport default function useEventEmitter() {\n  var ref = useRef();\n\n  if (!ref.current) {\n    ref.current = new EventEmitter();\n  }\n\n  return ref.current;\n}","map":{"version":3,"sources":["/Users/brandonliu/Project/goairmart/antd-demo/node_modules/ahooks/es/useEventEmitter/index.js"],"names":["__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","useRef","useEffect","EventEmitter","_this","subscriptions","Set","emit","val","e_1","_a","_b","_c","subscription","e_1_1","error","useSubscription","callback","callbackRef","current","add","useEventEmitter","ref"],"mappings":"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","sourcesContent":["var __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nimport { useRef, useEffect } from 'react';\n\nvar EventEmitter =\n/** @class */\nfunction () {\n  function EventEmitter() {\n    var _this = this;\n\n    this.subscriptions = new Set();\n\n    this.emit = function (val) {\n      var e_1, _a;\n\n      try {\n        for (var _b = __values(_this.subscriptions), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var subscription = _c.value;\n          subscription(val);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    };\n\n    this.useSubscription = function (callback) {\n      var callbackRef = useRef();\n      callbackRef.current = callback;\n      useEffect(function () {\n        function subscription(val) {\n          if (callbackRef.current) {\n            callbackRef.current(val);\n          }\n        }\n\n        _this.subscriptions.add(subscription);\n\n        return function () {\n          _this.subscriptions[\"delete\"](subscription);\n        };\n      }, []);\n    };\n  }\n\n  return EventEmitter;\n}();\n\nexport { EventEmitter };\nexport default function useEventEmitter() {\n  var ref = useRef();\n\n  if (!ref.current) {\n    ref.current = new EventEmitter();\n  }\n\n  return ref.current;\n}"]},"metadata":{},"sourceType":"module"}