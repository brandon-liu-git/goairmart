{"ast":null,"code":"import React, { forwardRef, useImperativeHandle } from 'react';\nimport Tooltip from 'rc-tooltip';\nimport classNames from 'classnames';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { mergeProps } from '../../utils/with-default-props';\nvar classPrefix = \"adm-popover\";\nvar enterClassName = 'entering';\nvar leaveClassName = 'leaving';\nvar defaultProps = {\n  defaultVisible: false\n};\nexport var Popover = /*#__PURE__*/forwardRef(function (p, ref) {\n  var props = mergeProps(defaultProps, p);\n  var _props$mode = props.mode,\n      mode = _props$mode === void 0 ? 'light' : _props$mode;\n\n  var _usePropsValue = usePropsValue({\n    value: props.visible,\n    defaultValue: props.defaultVisible,\n    onChange: props.onVisibleChange\n  }),\n      visible = _usePropsValue[0],\n      setVisible = _usePropsValue[1];\n\n  useImperativeHandle(ref, function () {\n    return {\n      show: function show() {\n        return setVisible(true);\n      },\n      hide: function hide() {\n        return setVisible(false);\n      },\n      visible: visible\n    };\n  }, [visible]);\n  return /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, props, {\n    overlayClassName: classNames(classPrefix + \"-\" + mode, props.overlayClassName),\n    destroyTooltipOnHide: props.destroyOnHide,\n    prefixCls: classPrefix,\n    getTooltipContainer: props.getContainer || function () {\n      return document.body;\n    },\n    visible: visible,\n    onVisibleChange: setVisible,\n    trigger: props.trigger,\n    motion: {\n      motionName: {\n        appear: enterClassName,\n        appearActive: enterClassName,\n        enter: enterClassName,\n        enterActive: enterClassName,\n        leaveActive: leaveClassName,\n        leave: leaveClassName\n      },\n      motionDeadline: 200\n    },\n    overlay: /*#__PURE__*/React.createElement(\"div\", {\n      className: classPrefix + \"-inner-content\"\n    }, props.content)\n  }), props.children);\n});","map":{"version":3,"sources":["/Users/brandonliu/Project/goairmart/antd-demo/node_modules/antd-mobile/es/components/popover/popover.js"],"names":["React","forwardRef","useImperativeHandle","Tooltip","classNames","usePropsValue","mergeProps","classPrefix","enterClassName","leaveClassName","defaultProps","defaultVisible","Popover","p","ref","props","_props$mode","mode","_usePropsValue","value","visible","defaultValue","onChange","onVisibleChange","setVisible","show","hide","createElement","Object","assign","overlayClassName","destroyTooltipOnHide","destroyOnHide","prefixCls","getTooltipContainer","getContainer","document","body","trigger","motion","motionName","appear","appearActive","enter","enterActive","leaveActive","leave","motionDeadline","overlay","className","content","children"],"mappings":"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","sourcesContent":["import React, { forwardRef, useImperativeHandle } from 'react';\nimport Tooltip from 'rc-tooltip';\nimport classNames from 'classnames';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { mergeProps } from '../../utils/with-default-props';\nvar classPrefix = \"adm-popover\";\nvar enterClassName = 'entering';\nvar leaveClassName = 'leaving';\nvar defaultProps = {\n  defaultVisible: false\n};\nexport var Popover = /*#__PURE__*/forwardRef(function (p, ref) {\n  var props = mergeProps(defaultProps, p);\n  var _props$mode = props.mode,\n      mode = _props$mode === void 0 ? 'light' : _props$mode;\n\n  var _usePropsValue = usePropsValue({\n    value: props.visible,\n    defaultValue: props.defaultVisible,\n    onChange: props.onVisibleChange\n  }),\n      visible = _usePropsValue[0],\n      setVisible = _usePropsValue[1];\n\n  useImperativeHandle(ref, function () {\n    return {\n      show: function show() {\n        return setVisible(true);\n      },\n      hide: function hide() {\n        return setVisible(false);\n      },\n      visible: visible\n    };\n  }, [visible]);\n  return /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, props, {\n    overlayClassName: classNames(classPrefix + \"-\" + mode, props.overlayClassName),\n    destroyTooltipOnHide: props.destroyOnHide,\n    prefixCls: classPrefix,\n    getTooltipContainer: props.getContainer || function () {\n      return document.body;\n    },\n    visible: visible,\n    onVisibleChange: setVisible,\n    trigger: props.trigger,\n    motion: {\n      motionName: {\n        appear: enterClassName,\n        appearActive: enterClassName,\n        enter: enterClassName,\n        enterActive: enterClassName,\n        leaveActive: leaveClassName,\n        leave: leaveClassName\n      },\n      motionDeadline: 200\n    },\n    overlay: /*#__PURE__*/React.createElement(\"div\", {\n      className: classPrefix + \"-inner-content\"\n    }, props.content)\n  }), props.children);\n});"]},"metadata":{},"sourceType":"module"}