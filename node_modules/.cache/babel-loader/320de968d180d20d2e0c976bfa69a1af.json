{"ast":null,"code":"import React from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport List from '../list';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { CheckListContext } from './context';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { CheckOutline } from 'antd-mobile-icons';\nvar defaultProps = {\n  multiple: false,\n  defaultValue: [],\n  activeIcon: /*#__PURE__*/React.createElement(CheckOutline, null)\n};\nexport var CheckList = function CheckList(p) {\n  var props = mergeProps(defaultProps, p);\n\n  var _usePropsValue = usePropsValue(props),\n      value = _usePropsValue[0],\n      setValue = _usePropsValue[1];\n\n  function check(val) {\n    if (props.multiple) {\n      setValue([].concat(value, [val]));\n    } else {\n      setValue([val]);\n    }\n  }\n\n  function uncheck(val) {\n    setValue(value.filter(function (item) {\n      return item !== val;\n    }));\n  }\n\n  var activeIcon = props.activeIcon,\n      disabled = props.disabled,\n      readOnly = props.readOnly;\n  return /*#__PURE__*/React.createElement(CheckListContext.Provider, {\n    value: {\n      value: value,\n      check: check,\n      uncheck: uncheck,\n      activeIcon: activeIcon,\n      disabled: disabled,\n      readOnly: readOnly\n    }\n  }, withNativeProps(props, /*#__PURE__*/React.createElement(List, {\n    mode: props.mode\n  }, props.children)));\n};","map":{"version":3,"sources":["/Users/brandonliu/Project/goairmart/antd-demo/node_modules/antd-mobile/es/components/check-list/check-list.js"],"names":["React","withNativeProps","List","mergeProps","CheckListContext","usePropsValue","CheckOutline","defaultProps","multiple","defaultValue","activeIcon","createElement","CheckList","p","props","_usePropsValue","value","setValue","check","val","concat","uncheck","filter","item","disabled","readOnly","Provider","mode","children"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,gBAAT,QAAiC,WAAjC;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,KADO;AAEjBC,EAAAA,YAAY,EAAE,EAFG;AAGjBC,EAAAA,UAAU,EAAE,aAAaV,KAAK,CAACW,aAAN,CAAoBL,YAApB,EAAkC,IAAlC;AAHR,CAAnB;AAKA,OAAO,IAAIM,SAAS,GAAG,SAASA,SAAT,CAAmBC,CAAnB,EAAsB;AAC3C,MAAIC,KAAK,GAAGX,UAAU,CAACI,YAAD,EAAeM,CAAf,CAAtB;;AAEA,MAAIE,cAAc,GAAGV,aAAa,CAACS,KAAD,CAAlC;AAAA,MACIE,KAAK,GAAGD,cAAc,CAAC,CAAD,CAD1B;AAAA,MAEIE,QAAQ,GAAGF,cAAc,CAAC,CAAD,CAF7B;;AAIA,WAASG,KAAT,CAAeC,GAAf,EAAoB;AAClB,QAAIL,KAAK,CAACN,QAAV,EAAoB;AAClBS,MAAAA,QAAQ,CAAC,GAAGG,MAAH,CAAUJ,KAAV,EAAiB,CAACG,GAAD,CAAjB,CAAD,CAAR;AACD,KAFD,MAEO;AACLF,MAAAA,QAAQ,CAAC,CAACE,GAAD,CAAD,CAAR;AACD;AACF;;AAED,WAASE,OAAT,CAAiBF,GAAjB,EAAsB;AACpBF,IAAAA,QAAQ,CAACD,KAAK,CAACM,MAAN,CAAa,UAAUC,IAAV,EAAgB;AACpC,aAAOA,IAAI,KAAKJ,GAAhB;AACD,KAFQ,CAAD,CAAR;AAGD;;AAED,MAAIT,UAAU,GAAGI,KAAK,CAACJ,UAAvB;AAAA,MACIc,QAAQ,GAAGV,KAAK,CAACU,QADrB;AAAA,MAEIC,QAAQ,GAAGX,KAAK,CAACW,QAFrB;AAGA,SAAO,aAAazB,KAAK,CAACW,aAAN,CAAoBP,gBAAgB,CAACsB,QAArC,EAA+C;AACjEV,IAAAA,KAAK,EAAE;AACLA,MAAAA,KAAK,EAAEA,KADF;AAELE,MAAAA,KAAK,EAAEA,KAFF;AAGLG,MAAAA,OAAO,EAAEA,OAHJ;AAILX,MAAAA,UAAU,EAAEA,UAJP;AAKLc,MAAAA,QAAQ,EAAEA,QALL;AAMLC,MAAAA,QAAQ,EAAEA;AANL;AAD0D,GAA/C,EASjBxB,eAAe,CAACa,KAAD,EAAQ,aAAad,KAAK,CAACW,aAAN,CAAoBT,IAApB,EAA0B;AAC/DyB,IAAAA,IAAI,EAAEb,KAAK,CAACa;AADmD,GAA1B,EAEpCb,KAAK,CAACc,QAF8B,CAArB,CATE,CAApB;AAYD,CApCM","sourcesContent":["import React from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport List from '../list';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { CheckListContext } from './context';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { CheckOutline } from 'antd-mobile-icons';\nvar defaultProps = {\n  multiple: false,\n  defaultValue: [],\n  activeIcon: /*#__PURE__*/React.createElement(CheckOutline, null)\n};\nexport var CheckList = function CheckList(p) {\n  var props = mergeProps(defaultProps, p);\n\n  var _usePropsValue = usePropsValue(props),\n      value = _usePropsValue[0],\n      setValue = _usePropsValue[1];\n\n  function check(val) {\n    if (props.multiple) {\n      setValue([].concat(value, [val]));\n    } else {\n      setValue([val]);\n    }\n  }\n\n  function uncheck(val) {\n    setValue(value.filter(function (item) {\n      return item !== val;\n    }));\n  }\n\n  var activeIcon = props.activeIcon,\n      disabled = props.disabled,\n      readOnly = props.readOnly;\n  return /*#__PURE__*/React.createElement(CheckListContext.Provider, {\n    value: {\n      value: value,\n      check: check,\n      uncheck: uncheck,\n      activeIcon: activeIcon,\n      disabled: disabled,\n      readOnly: readOnly\n    }\n  }, withNativeProps(props, /*#__PURE__*/React.createElement(List, {\n    mode: props.mode\n  }, props.children)));\n};"]},"metadata":{},"sourceType":"module"}