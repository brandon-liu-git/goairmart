{"ast":null,"code":"import { useEffect, useRef } from 'react';\n\nvar useTrackedEffect = function useTrackedEffect(effect, deps) {\n  var previousDepsRef = useRef();\n\n  var diffTwoDeps = function diffTwoDeps(deps1, deps2) {\n    //Let's do a reference equality check on 2 dependency list.\n    //If deps1 is defined, we iterate over deps1 and do comparison on each element with equivalent element from deps2\n    //As this func is used only in this hook, we assume 2 deps always have same length.\n    return deps1 ? deps1.map(function (_ele, idx) {\n      return deps1[idx] !== deps2[idx] ? idx : -1;\n    }).filter(function (ele) {\n      return ele >= 0;\n    }) : deps2 ? deps2.map(function (_ele, idx) {\n      return idx;\n    }) : [];\n  };\n\n  useEffect(function () {\n    var changes = diffTwoDeps(previousDepsRef.current, deps);\n    var previousDeps = previousDepsRef.current;\n    previousDepsRef.current = deps;\n    return effect(changes, previousDeps, deps);\n  }, deps);\n};\n\nexport default useTrackedEffect;","map":{"version":3,"sources":["/Users/brandonliu/Project/goairmart/antd-demo/node_modules/ahooks/es/useTrackedEffect/index.js"],"names":["useEffect","useRef","useTrackedEffect","effect","deps","previousDepsRef","diffTwoDeps","deps1","deps2","map","_ele","idx","filter","ele","changes","current","previousDeps"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;;AAEA,IAAIC,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,MAA1B,EAAkCC,IAAlC,EAAwC;AAC7D,MAAIC,eAAe,GAAGJ,MAAM,EAA5B;;AAEA,MAAIK,WAAW,GAAG,SAASA,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmC;AACnD;AACA;AACA;AACA,WAAOD,KAAK,GAAGA,KAAK,CAACE,GAAN,CAAU,UAAUC,IAAV,EAAgBC,GAAhB,EAAqB;AAC5C,aAAOJ,KAAK,CAACI,GAAD,CAAL,KAAeH,KAAK,CAACG,GAAD,CAApB,GAA4BA,GAA5B,GAAkC,CAAC,CAA1C;AACD,KAFc,EAEZC,MAFY,CAEL,UAAUC,GAAV,EAAe;AACvB,aAAOA,GAAG,IAAI,CAAd;AACD,KAJc,CAAH,GAIPL,KAAK,GAAGA,KAAK,CAACC,GAAN,CAAU,UAAUC,IAAV,EAAgBC,GAAhB,EAAqB;AAC1C,aAAOA,GAAP;AACD,KAFY,CAAH,GAEL,EANL;AAOD,GAXD;;AAaAX,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIc,OAAO,GAAGR,WAAW,CAACD,eAAe,CAACU,OAAjB,EAA0BX,IAA1B,CAAzB;AACA,QAAIY,YAAY,GAAGX,eAAe,CAACU,OAAnC;AACAV,IAAAA,eAAe,CAACU,OAAhB,GAA0BX,IAA1B;AACA,WAAOD,MAAM,CAACW,OAAD,EAAUE,YAAV,EAAwBZ,IAAxB,CAAb;AACD,GALQ,EAKNA,IALM,CAAT;AAMD,CAtBD;;AAwBA,eAAeF,gBAAf","sourcesContent":["import { useEffect, useRef } from 'react';\n\nvar useTrackedEffect = function useTrackedEffect(effect, deps) {\n  var previousDepsRef = useRef();\n\n  var diffTwoDeps = function diffTwoDeps(deps1, deps2) {\n    //Let's do a reference equality check on 2 dependency list.\n    //If deps1 is defined, we iterate over deps1 and do comparison on each element with equivalent element from deps2\n    //As this func is used only in this hook, we assume 2 deps always have same length.\n    return deps1 ? deps1.map(function (_ele, idx) {\n      return deps1[idx] !== deps2[idx] ? idx : -1;\n    }).filter(function (ele) {\n      return ele >= 0;\n    }) : deps2 ? deps2.map(function (_ele, idx) {\n      return idx;\n    }) : [];\n  };\n\n  useEffect(function () {\n    var changes = diffTwoDeps(previousDepsRef.current, deps);\n    var previousDeps = previousDepsRef.current;\n    previousDepsRef.current = deps;\n    return effect(changes, previousDeps, deps);\n  }, deps);\n};\n\nexport default useTrackedEffect;"]},"metadata":{},"sourceType":"module"}