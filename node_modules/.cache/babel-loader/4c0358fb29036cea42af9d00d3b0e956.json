{"ast":null,"code":"// 找到树的深度\nexport function getTreeDeep(treeData, childrenName) {\n  if (childrenName === void 0) {\n    childrenName = 'children';\n  }\n\n  var walker = function walker(tree) {\n    var deep = 0;\n    tree.forEach(function (item) {\n      if (item[childrenName]) {\n        deep = Math.max(deep, walker(item[childrenName]) + 1);\n      } else {\n        deep = Math.max(deep, 1);\n      }\n    });\n    return deep;\n  };\n\n  return walker(treeData);\n}","map":{"version":3,"sources":["/Users/brandonliu/Project/goairmart/antd-demo/node_modules/antd-mobile/es/utils/tree.js"],"names":["getTreeDeep","treeData","childrenName","walker","tree","deep","forEach","item","Math","max"],"mappings":"AAAA;AACA,OAAO,SAASA,WAAT,CAAqBC,QAArB,EAA+BC,YAA/B,EAA6C;AAClD,MAAIA,YAAY,KAAK,KAAK,CAA1B,EAA6B;AAC3BA,IAAAA,YAAY,GAAG,UAAf;AACD;;AAED,MAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,IAAhB,EAAsB;AACjC,QAAIC,IAAI,GAAG,CAAX;AACAD,IAAAA,IAAI,CAACE,OAAL,CAAa,UAAUC,IAAV,EAAgB;AAC3B,UAAIA,IAAI,CAACL,YAAD,CAAR,EAAwB;AACtBG,QAAAA,IAAI,GAAGG,IAAI,CAACC,GAAL,CAASJ,IAAT,EAAeF,MAAM,CAACI,IAAI,CAACL,YAAD,CAAL,CAAN,GAA6B,CAA5C,CAAP;AACD,OAFD,MAEO;AACLG,QAAAA,IAAI,GAAGG,IAAI,CAACC,GAAL,CAASJ,IAAT,EAAe,CAAf,CAAP;AACD;AACF,KAND;AAOA,WAAOA,IAAP;AACD,GAVD;;AAYA,SAAOF,MAAM,CAACF,QAAD,CAAb;AACD","sourcesContent":["// 找到树的深度\nexport function getTreeDeep(treeData, childrenName) {\n  if (childrenName === void 0) {\n    childrenName = 'children';\n  }\n\n  var walker = function walker(tree) {\n    var deep = 0;\n    tree.forEach(function (item) {\n      if (item[childrenName]) {\n        deep = Math.max(deep, walker(item[childrenName]) + 1);\n      } else {\n        deep = Math.max(deep, 1);\n      }\n    });\n    return deep;\n  };\n\n  return walker(treeData);\n}"]},"metadata":{},"sourceType":"module"}