{"ast":null,"code":"import { useEffect, useRef } from 'react';\n\nfunction useInterval(fn, delay, options) {\n  var immediate = options === null || options === void 0 ? void 0 : options.immediate;\n  var fnRef = useRef();\n  fnRef.current = fn;\n  useEffect(function () {\n    var _a;\n\n    if (delay === undefined || delay === null) return;\n\n    if (immediate) {\n      (_a = fnRef.current) === null || _a === void 0 ? void 0 : _a.call(fnRef);\n    }\n\n    var timer = setInterval(function () {\n      var _a;\n\n      (_a = fnRef.current) === null || _a === void 0 ? void 0 : _a.call(fnRef);\n    }, delay);\n    return function () {\n      clearInterval(timer);\n    };\n  }, [delay]);\n}\n\nexport default useInterval;","map":{"version":3,"sources":["/Users/brandonliu/Project/goairmart/antd-demo/node_modules/ahooks/es/useInterval/index.js"],"names":["useEffect","useRef","useInterval","fn","delay","options","immediate","fnRef","current","_a","undefined","call","timer","setInterval","clearInterval"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;;AAEA,SAASC,WAAT,CAAqBC,EAArB,EAAyBC,KAAzB,EAAgCC,OAAhC,EAAyC;AACvC,MAAIC,SAAS,GAAGD,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACC,SAA1E;AACA,MAAIC,KAAK,GAAGN,MAAM,EAAlB;AACAM,EAAAA,KAAK,CAACC,OAAN,GAAgBL,EAAhB;AACAH,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIS,EAAJ;;AAEA,QAAIL,KAAK,KAAKM,SAAV,IAAuBN,KAAK,KAAK,IAArC,EAA2C;;AAE3C,QAAIE,SAAJ,EAAe;AACb,OAACG,EAAE,GAAGF,KAAK,CAACC,OAAZ,MAAyB,IAAzB,IAAiCC,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACE,IAAH,CAAQJ,KAAR,CAA1D;AACD;;AAED,QAAIK,KAAK,GAAGC,WAAW,CAAC,YAAY;AAClC,UAAIJ,EAAJ;;AAEA,OAACA,EAAE,GAAGF,KAAK,CAACC,OAAZ,MAAyB,IAAzB,IAAiCC,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACE,IAAH,CAAQJ,KAAR,CAA1D;AACD,KAJsB,EAIpBH,KAJoB,CAAvB;AAKA,WAAO,YAAY;AACjBU,MAAAA,aAAa,CAACF,KAAD,CAAb;AACD,KAFD;AAGD,GAjBQ,EAiBN,CAACR,KAAD,CAjBM,CAAT;AAkBD;;AAED,eAAeF,WAAf","sourcesContent":["import { useEffect, useRef } from 'react';\n\nfunction useInterval(fn, delay, options) {\n  var immediate = options === null || options === void 0 ? void 0 : options.immediate;\n  var fnRef = useRef();\n  fnRef.current = fn;\n  useEffect(function () {\n    var _a;\n\n    if (delay === undefined || delay === null) return;\n\n    if (immediate) {\n      (_a = fnRef.current) === null || _a === void 0 ? void 0 : _a.call(fnRef);\n    }\n\n    var timer = setInterval(function () {\n      var _a;\n\n      (_a = fnRef.current) === null || _a === void 0 ? void 0 : _a.call(fnRef);\n    }, delay);\n    return function () {\n      clearInterval(timer);\n    };\n  }, [delay]);\n}\n\nexport default useInterval;"]},"metadata":{},"sourceType":"module"}