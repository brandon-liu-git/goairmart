{"ast":null,"code":"import { mergeProps } from '../../utils/with-default-props';\nimport React, { useEffect, useRef } from 'react';\nimport { useLockFn, usePersistFn } from 'ahooks';\nimport { withNativeProps } from '../../utils/native-props';\nimport { getScrollParent } from '../../utils/get-scroll-parent';\nimport Loading from '../loading';\n\nfunction isWindow(element) {\n  return element === window;\n}\n\nvar classPrefix = \"adm-infinite-scroll\";\n\nvar InfiniteScrollContent = function InfiniteScrollContent(_ref) {\n  var hasMore = _ref.hasMore;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, hasMore ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", null, \"\\u52A0\\u8F7D\\u4E2D\"), /*#__PURE__*/React.createElement(Loading, null)) : /*#__PURE__*/React.createElement(\"span\", null, \"\\u6CA1\\u6709\\u66F4\\u591A\\u4E86\"));\n};\n\nexport var InfiniteScroll = function InfiniteScroll(p) {\n  var props = mergeProps({\n    threshold: 250\n  }, p);\n  var doLoadMore = useLockFn(function () {\n    return props.loadMore();\n  });\n  var elementRef = useRef(null);\n  var checkTimeoutRef = useRef();\n  var check = usePersistFn(function () {\n    window.clearTimeout(checkTimeoutRef.current);\n    checkTimeoutRef.current = window.setTimeout(function () {\n      if (!props.hasMore) return;\n      var element = elementRef.current;\n      if (!element) return;\n      if (!element.offsetParent) return;\n      var parent = getScrollParent(element);\n      if (!parent) return;\n      var rect = element.getBoundingClientRect();\n      var elementTop = rect.top;\n      var current = isWindow(parent) ? window.innerHeight : parent.getBoundingClientRect().bottom;\n\n      if (current >= elementTop - props.threshold) {\n        doLoadMore();\n      }\n    });\n  }); // 确保在内容不足时会自动触发加载事件\n\n  useEffect(function () {\n    check();\n  });\n  useEffect(function () {\n    var element = elementRef.current;\n    if (!element) return;\n    var parent = getScrollParent(element);\n    if (!parent) return;\n\n    function onScroll() {\n      check();\n    }\n\n    parent.addEventListener('scroll', onScroll);\n    return function () {\n      parent.removeEventListener('scroll', onScroll);\n    };\n  }, []);\n  return withNativeProps(props, /*#__PURE__*/React.createElement(\"div\", {\n    className: classPrefix,\n    ref: elementRef\n  }, props.children && props.children, !props.children && /*#__PURE__*/React.createElement(InfiniteScrollContent, {\n    hasMore: props.hasMore\n  })));\n};","map":{"version":3,"sources":["/Users/brandonliu/Project/goairmart/antd-demo/node_modules/antd-mobile/es/components/infinite-scroll/infinite-scroll.js"],"names":["mergeProps","React","useEffect","useRef","useLockFn","usePersistFn","withNativeProps","getScrollParent","Loading","isWindow","element","window","classPrefix","InfiniteScrollContent","_ref","hasMore","createElement","Fragment","InfiniteScroll","p","props","threshold","doLoadMore","loadMore","elementRef","checkTimeoutRef","check","clearTimeout","current","setTimeout","offsetParent","parent","rect","getBoundingClientRect","elementTop","top","innerHeight","bottom","onScroll","addEventListener","removeEventListener","className","ref","children"],"mappings":"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","sourcesContent":["import { mergeProps } from '../../utils/with-default-props';\nimport React, { useEffect, useRef } from 'react';\nimport { useLockFn, usePersistFn } from 'ahooks';\nimport { withNativeProps } from '../../utils/native-props';\nimport { getScrollParent } from '../../utils/get-scroll-parent';\nimport Loading from '../loading';\n\nfunction isWindow(element) {\n  return element === window;\n}\n\nvar classPrefix = \"adm-infinite-scroll\";\n\nvar InfiniteScrollContent = function InfiniteScrollContent(_ref) {\n  var hasMore = _ref.hasMore;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, hasMore ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", null, \"\\u52A0\\u8F7D\\u4E2D\"), /*#__PURE__*/React.createElement(Loading, null)) : /*#__PURE__*/React.createElement(\"span\", null, \"\\u6CA1\\u6709\\u66F4\\u591A\\u4E86\"));\n};\n\nexport var InfiniteScroll = function InfiniteScroll(p) {\n  var props = mergeProps({\n    threshold: 250\n  }, p);\n  var doLoadMore = useLockFn(function () {\n    return props.loadMore();\n  });\n  var elementRef = useRef(null);\n  var checkTimeoutRef = useRef();\n  var check = usePersistFn(function () {\n    window.clearTimeout(checkTimeoutRef.current);\n    checkTimeoutRef.current = window.setTimeout(function () {\n      if (!props.hasMore) return;\n      var element = elementRef.current;\n      if (!element) return;\n      if (!element.offsetParent) return;\n      var parent = getScrollParent(element);\n      if (!parent) return;\n      var rect = element.getBoundingClientRect();\n      var elementTop = rect.top;\n      var current = isWindow(parent) ? window.innerHeight : parent.getBoundingClientRect().bottom;\n\n      if (current >= elementTop - props.threshold) {\n        doLoadMore();\n      }\n    });\n  }); // 确保在内容不足时会自动触发加载事件\n\n  useEffect(function () {\n    check();\n  });\n  useEffect(function () {\n    var element = elementRef.current;\n    if (!element) return;\n    var parent = getScrollParent(element);\n    if (!parent) return;\n\n    function onScroll() {\n      check();\n    }\n\n    parent.addEventListener('scroll', onScroll);\n    return function () {\n      parent.removeEventListener('scroll', onScroll);\n    };\n  }, []);\n  return withNativeProps(props, /*#__PURE__*/React.createElement(\"div\", {\n    className: classPrefix,\n    ref: elementRef\n  }, props.children && props.children, !props.children && /*#__PURE__*/React.createElement(InfiniteScrollContent, {\n    hasMore: props.hasMore\n  })));\n};"]},"metadata":{},"sourceType":"module"}