{"ast":null,"code":"import React from 'react';\nimport classNames from 'classnames';\nexport function withNativeProps(props, element) {\n  var p = Object.assign({}, element.props);\n\n  if (props.className) {\n    p.className = classNames(element.props.className, props.className);\n  }\n\n  if (props.style) {\n    p.style = Object.assign(Object.assign({}, p.style), props.style);\n  }\n\n  for (var key in props) {\n    if (!props.hasOwnProperty(key)) continue;\n\n    if (key.startsWith('data-') || key.startsWith('aria-')) {\n      p[key] = props[key];\n    }\n  }\n\n  return /*#__PURE__*/React.cloneElement(element, p);\n}","map":{"version":3,"sources":["/Users/brandonliu/Project/goairmart/antd-demo/node_modules/antd-mobile/es/utils/native-props.js"],"names":["React","classNames","withNativeProps","props","element","p","Object","assign","className","style","key","hasOwnProperty","startsWith","cloneElement"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,OAAhC,EAAyC;AAC9C,MAAIC,CAAC,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,OAAO,CAACD,KAA1B,CAAR;;AAEA,MAAIA,KAAK,CAACK,SAAV,EAAqB;AACnBH,IAAAA,CAAC,CAACG,SAAF,GAAcP,UAAU,CAACG,OAAO,CAACD,KAAR,CAAcK,SAAf,EAA0BL,KAAK,CAACK,SAAhC,CAAxB;AACD;;AAED,MAAIL,KAAK,CAACM,KAAV,EAAiB;AACfJ,IAAAA,CAAC,CAACI,KAAF,GAAUH,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,CAAC,CAACI,KAApB,CAAd,EAA0CN,KAAK,CAACM,KAAhD,CAAV;AACD;;AAED,OAAK,IAAIC,GAAT,IAAgBP,KAAhB,EAAuB;AACrB,QAAI,CAACA,KAAK,CAACQ,cAAN,CAAqBD,GAArB,CAAL,EAAgC;;AAEhC,QAAIA,GAAG,CAACE,UAAJ,CAAe,OAAf,KAA2BF,GAAG,CAACE,UAAJ,CAAe,OAAf,CAA/B,EAAwD;AACtDP,MAAAA,CAAC,CAACK,GAAD,CAAD,GAASP,KAAK,CAACO,GAAD,CAAd;AACD;AACF;;AAED,SAAO,aAAaV,KAAK,CAACa,YAAN,CAAmBT,OAAnB,EAA4BC,CAA5B,CAApB;AACD","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nexport function withNativeProps(props, element) {\n  var p = Object.assign({}, element.props);\n\n  if (props.className) {\n    p.className = classNames(element.props.className, props.className);\n  }\n\n  if (props.style) {\n    p.style = Object.assign(Object.assign({}, p.style), props.style);\n  }\n\n  for (var key in props) {\n    if (!props.hasOwnProperty(key)) continue;\n\n    if (key.startsWith('data-') || key.startsWith('aria-')) {\n      p[key] = props[key];\n    }\n  }\n\n  return /*#__PURE__*/React.cloneElement(element, p);\n}"]},"metadata":{},"sourceType":"module"}