{"ast":null,"code":"import React, { useRef } from 'react';\nimport { useDrag } from '@use-gesture/react';\nimport { useSpring, animated } from '@react-spring/web';\nimport { Slide } from './slide';\nimport { convertPx } from '../../utils/convert-px';\nimport { bound } from '../../utils/bound';\nvar classPrefix = \"adm-image-viewer\";\nexport var Slides = function Slides(props) {\n  var slideWidth = window.innerWidth + convertPx(16);\n\n  var _useSpring = useSpring(function () {\n    return {\n      x: props.defaultIndex * slideWidth,\n      config: {\n        tension: 250,\n        clamp: true\n      }\n    };\n  }),\n      x = _useSpring[0].x,\n      api = _useSpring[1];\n\n  var count = props.images.length;\n  var dragLockRef = useRef(false);\n  var bind = useDrag(function (state) {\n    if (dragLockRef.current) return;\n    var _state$offset = state.offset,\n        offsetX = _state$offset[0];\n\n    if (state.last) {\n      var velocityOffset = Math.min(state.velocity[0] * 2000, slideWidth) * state.direction[0];\n      var index = bound(Math.round((offsetX + velocityOffset) / slideWidth), 0, count - 1);\n      api.start({\n        x: index * slideWidth\n      });\n    } else {\n      api.start({\n        x: offsetX,\n        immediate: true\n      });\n    }\n  }, {\n    transform: function transform(_ref) {\n      var x = _ref[0],\n          y = _ref[1];\n      return [-x, y];\n    },\n    from: function from() {\n      return [x.get(), 0];\n    },\n    bounds: function bounds() {\n      return {\n        left: 0,\n        right: (count - 1) * slideWidth\n      };\n    },\n    rubberband: true,\n    axis: 'x',\n    pointer: {\n      touch: true\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classPrefix + \"-slides\"\n  }, bind()), /*#__PURE__*/React.createElement(animated.div, {\n    className: classPrefix + \"-indicator\"\n  }, x.to(function (v) {\n    var index = bound(Math.round(v / slideWidth), 0, count - 1);\n    return index + 1 + \" / \" + count;\n  })), /*#__PURE__*/React.createElement(animated.div, {\n    className: classPrefix + \"-slides-inner\",\n    style: {\n      x: x.to(function (x) {\n        return -x;\n      })\n    }\n  }, props.images.map(function (image) {\n    return /*#__PURE__*/React.createElement(Slide, {\n      key: image,\n      image: image,\n      onTap: props.onTap,\n      maxZoom: props.maxZoom,\n      onZoomChange: function onZoomChange(zoom) {\n        if (zoom !== 1) {\n          var index = Math.round(x.get() / slideWidth);\n          api.start({\n            x: index * slideWidth\n          });\n        }\n      },\n      dragLockRef: dragLockRef\n    });\n  })));\n};","map":{"version":3,"sources":["/Users/brandonliu/Project/goairmart/antd-demo/node_modules/antd-mobile/es/components/image-viewer/slides.js"],"names":["React","useRef","useDrag","useSpring","animated","Slide","convertPx","bound","classPrefix","Slides","props","slideWidth","window","innerWidth","_useSpring","x","defaultIndex","config","tension","clamp","api","count","images","length","dragLockRef","bind","state","current","_state$offset","offset","offsetX","last","velocityOffset","Math","min","velocity","direction","index","round","start","immediate","transform","_ref","y","from","get","bounds","left","right","rubberband","axis","pointer","touch","createElement","Object","assign","className","div","to","v","style","map","image","key","onTap","maxZoom","onZoomChange","zoom"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { useDrag } from '@use-gesture/react';\nimport { useSpring, animated } from '@react-spring/web';\nimport { Slide } from './slide';\nimport { convertPx } from '../../utils/convert-px';\nimport { bound } from '../../utils/bound';\nvar classPrefix = \"adm-image-viewer\";\nexport var Slides = function Slides(props) {\n  var slideWidth = window.innerWidth + convertPx(16);\n\n  var _useSpring = useSpring(function () {\n    return {\n      x: props.defaultIndex * slideWidth,\n      config: {\n        tension: 250,\n        clamp: true\n      }\n    };\n  }),\n      x = _useSpring[0].x,\n      api = _useSpring[1];\n\n  var count = props.images.length;\n  var dragLockRef = useRef(false);\n  var bind = useDrag(function (state) {\n    if (dragLockRef.current) return;\n    var _state$offset = state.offset,\n        offsetX = _state$offset[0];\n\n    if (state.last) {\n      var velocityOffset = Math.min(state.velocity[0] * 2000, slideWidth) * state.direction[0];\n      var index = bound(Math.round((offsetX + velocityOffset) / slideWidth), 0, count - 1);\n      api.start({\n        x: index * slideWidth\n      });\n    } else {\n      api.start({\n        x: offsetX,\n        immediate: true\n      });\n    }\n  }, {\n    transform: function transform(_ref) {\n      var x = _ref[0],\n          y = _ref[1];\n      return [-x, y];\n    },\n    from: function from() {\n      return [x.get(), 0];\n    },\n    bounds: function bounds() {\n      return {\n        left: 0,\n        right: (count - 1) * slideWidth\n      };\n    },\n    rubberband: true,\n    axis: 'x',\n    pointer: {\n      touch: true\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classPrefix + \"-slides\"\n  }, bind()), /*#__PURE__*/React.createElement(animated.div, {\n    className: classPrefix + \"-indicator\"\n  }, x.to(function (v) {\n    var index = bound(Math.round(v / slideWidth), 0, count - 1);\n    return index + 1 + \" / \" + count;\n  })), /*#__PURE__*/React.createElement(animated.div, {\n    className: classPrefix + \"-slides-inner\",\n    style: {\n      x: x.to(function (x) {\n        return -x;\n      })\n    }\n  }, props.images.map(function (image) {\n    return /*#__PURE__*/React.createElement(Slide, {\n      key: image,\n      image: image,\n      onTap: props.onTap,\n      maxZoom: props.maxZoom,\n      onZoomChange: function onZoomChange(zoom) {\n        if (zoom !== 1) {\n          var index = Math.round(x.get() / slideWidth);\n          api.start({\n            x: index * slideWidth\n          });\n        }\n      },\n      dragLockRef: dragLockRef\n    });\n  })));\n};"]},"metadata":{},"sourceType":"module"}