{"ast":null,"code":"import { show } from './show';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { getDefaultConfig } from '../config-provider';\nexport function alert(p) {\n  var defaultProps = {\n    confirmText: getDefaultConfig().locale.Dialog.ok\n  };\n  var props = mergeProps(defaultProps, p);\n  return new Promise(function (resolve) {\n    show(Object.assign(Object.assign({}, props), {\n      closeOnAction: true,\n      actions: [{\n        key: 'confirm',\n        text: props.confirmText\n      }],\n      onAction: props.onConfirm,\n      onClose: function onClose() {\n        resolve();\n      }\n    }));\n  });\n}","map":{"version":3,"sources":["/Users/brandonliu/Project/goairmart/antd-demo/node_modules/antd-mobile/es/components/dialog/alert.js"],"names":["show","mergeProps","getDefaultConfig","alert","p","defaultProps","confirmText","locale","Dialog","ok","props","Promise","resolve","Object","assign","closeOnAction","actions","key","text","onAction","onConfirm","onClose"],"mappings":"AAAA,SAASA,IAAT,QAAqB,QAArB;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAO,SAASC,KAAT,CAAeC,CAAf,EAAkB;AACvB,MAAIC,YAAY,GAAG;AACjBC,IAAAA,WAAW,EAAEJ,gBAAgB,GAAGK,MAAnB,CAA0BC,MAA1B,CAAiCC;AAD7B,GAAnB;AAGA,MAAIC,KAAK,GAAGT,UAAU,CAACI,YAAD,EAAeD,CAAf,CAAtB;AACA,SAAO,IAAIO,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AACpCZ,IAAAA,IAAI,CAACa,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,CAAd,EAAwC;AAC3CK,MAAAA,aAAa,EAAE,IAD4B;AAE3CC,MAAAA,OAAO,EAAE,CAAC;AACRC,QAAAA,GAAG,EAAE,SADG;AAERC,QAAAA,IAAI,EAAER,KAAK,CAACJ;AAFJ,OAAD,CAFkC;AAM3Ca,MAAAA,QAAQ,EAAET,KAAK,CAACU,SAN2B;AAO3CC,MAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1BT,QAAAA,OAAO;AACR;AAT0C,KAAxC,CAAD,CAAJ;AAWD,GAZM,CAAP;AAaD","sourcesContent":["import { show } from './show';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { getDefaultConfig } from '../config-provider';\nexport function alert(p) {\n  var defaultProps = {\n    confirmText: getDefaultConfig().locale.Dialog.ok\n  };\n  var props = mergeProps(defaultProps, p);\n  return new Promise(function (resolve) {\n    show(Object.assign(Object.assign({}, props), {\n      closeOnAction: true,\n      actions: [{\n        key: 'confirm',\n        text: props.confirmText\n      }],\n      onAction: props.onConfirm,\n      onClose: function onClose() {\n        resolve();\n      }\n    }));\n  });\n}"]},"metadata":{},"sourceType":"module"}