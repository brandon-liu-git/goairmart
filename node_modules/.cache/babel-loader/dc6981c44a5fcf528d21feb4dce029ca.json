{"ast":null,"code":"import classNames from 'classnames';\nimport React, { useEffect, useMemo } from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport { getTreeDeep } from '../../utils/tree';\nimport { mergeProps } from '../../utils/with-default-props';\nimport Checkbox from '../checkbox';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { devWarning } from '../../utils/dev-log';\nvar classPrefix = \"adm-tree-select-multiple\";\nexport var Multiple = function Multiple(p) {\n  var props = mergeProps({\n    options: [],\n    fieldNames: {},\n    allSelectText: [],\n    defaultExpandKeys: [],\n    defaultValue: []\n  }, p);\n  useEffect(function () {\n    devWarning('TreeSelect', 'TreeSelect.Multiple has been deprecated.');\n  }, []);\n  var labelName = props.fieldNames.label || 'label';\n  var valueName = props.fieldNames.value || 'value';\n  var childrenName = props.fieldNames.children || 'children'; // 打开的 keys\n\n  var _usePropsValue = usePropsValue({\n    value: props.expandKeys,\n    defaultValue: props.defaultExpandKeys\n  }),\n      expandKeys = _usePropsValue[0],\n      setExpandKeys = _usePropsValue[1]; // 选中的 value（聚合后）\n\n\n  var _usePropsValue2 = usePropsValue({\n    value: props.value,\n    defaultValue: props.defaultValue\n  }),\n      value = _usePropsValue2[0],\n      setValue = _usePropsValue2[1]; // 获取目标所有叶子节点 key 集合\n\n\n  var getLeafKeys = function getLeafKeys(option) {\n    var keys = [];\n\n    var walker = function walker(op) {\n      var _a;\n\n      if (!op) {\n        return;\n      }\n\n      if ((_a = op[childrenName]) === null || _a === void 0 ? void 0 : _a.length) {\n        op[childrenName].forEach(function (i) {\n          return walker(i);\n        });\n      } else {\n        keys.push(op[valueName]);\n      }\n    };\n\n    walker(option);\n    return keys;\n  };\n\n  var _useMemo = useMemo(function () {\n    var deep = getTreeDeep(props.options, childrenName);\n    var optionsMap = new Map();\n    var optionsParentMap = new Map();\n\n    function traverse(current, children) {\n      children.forEach(function (item) {\n        optionsParentMap.set(item[valueName], current);\n        optionsMap.set(item[valueName], item);\n\n        if (item[childrenName]) {\n          traverse(item, item[childrenName]);\n        }\n      });\n    }\n\n    traverse(undefined, props.options);\n    return [deep, optionsMap, optionsParentMap];\n  }, [props.options]),\n      deep = _useMemo[0],\n      optionsMap = _useMemo[1],\n      optionsParentMap = _useMemo[2]; // 将聚合的 value 拆分开，获得叶子节点的 value 集合\n\n\n  var allSelectedLeafKeys = useMemo(function () {\n    var leafKeys = [];\n    value.forEach(function (v) {\n      var option = optionsMap.get(v);\n      leafKeys = leafKeys.concat(getLeafKeys(option));\n    });\n    return leafKeys;\n  }, [value, optionsMap]); // 子级有被选中的节点集合\n\n  var dotMap = useMemo(function () {\n    var map = new Map(); // 遍历 allChildrenValues, 向上递归\n\n    var walker = function walker(key) {\n      var parentOption = optionsParentMap.get(key);\n\n      if (!parentOption) {\n        return;\n      }\n\n      map.set(parentOption[valueName], true);\n      walker(parentOption[valueName]);\n    };\n\n    allSelectedLeafKeys.forEach(function (key) {\n      map.set(key, true);\n      walker(key);\n    });\n    return map;\n  }, [optionsParentMap, value]);\n\n  var onChange = function onChange(targetKeys) {\n    var _a;\n\n    var groupKeys = [].concat(targetKeys);\n    var unusedKeys = [];\n\n    var walker = function walker(keys) {\n      keys.forEach(function (key) {\n        var _a;\n\n        if (unusedKeys.includes(key)) {\n          return;\n        }\n\n        var parent = optionsParentMap.get(key);\n\n        if (!parent) {\n          return;\n        }\n\n        var childrenKeys = ((_a = parent[childrenName]) === null || _a === void 0 ? void 0 : _a.map(function (i) {\n          return i[valueName];\n        })) || [];\n\n        if (childrenKeys.every(function (i) {\n          return groupKeys.includes(i);\n        })) {\n          groupKeys.push(parent[valueName]);\n          unusedKeys = unusedKeys.concat(childrenKeys);\n        }\n      });\n    }; // 遍历 deep 次 groupKeys，每次往上聚合一层\n\n\n    for (var i = 0; i < deep; i++) {\n      walker(groupKeys);\n    }\n\n    groupKeys = groupKeys.filter(function (i) {\n      return !unusedKeys.includes(i);\n    });\n    var groupOptions = groupKeys.map(function (i) {\n      return optionsMap.get(i);\n    });\n    setValue(groupKeys);\n    (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, groupKeys, groupOptions);\n  };\n\n  var onItemSelect = function onItemSelect(option) {\n    var _a;\n\n    var parentNodes = [];\n    var current = option;\n\n    while (current) {\n      parentNodes.unshift(current);\n      var next = optionsParentMap.get(current[valueName]);\n      current = next;\n    }\n\n    var keys = parentNodes.map(function (i) {\n      return i[valueName];\n    });\n    setExpandKeys(keys);\n    (_a = props.onExpand) === null || _a === void 0 ? void 0 : _a.call(props, keys, parentNodes);\n  }; // 渲染全选节点\n\n\n  var renderSelectAllItem = function renderSelectAllItem(columnOptions, index) {\n    var _a;\n\n    var text = (_a = props.selectAllText) === null || _a === void 0 ? void 0 : _a[index];\n\n    if (!text) {\n      return;\n    }\n\n    var currentLeafKeys = [];\n    columnOptions.forEach(function (option) {\n      currentLeafKeys = currentLeafKeys.concat(getLeafKeys(option));\n    });\n    var allSelected = currentLeafKeys.every(function (i) {\n      return allSelectedLeafKeys.includes(i);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: function onClick() {\n        if (allSelected) {\n          onChange(allSelectedLeafKeys.filter(function (i) {\n            return !currentLeafKeys.includes(i);\n          }));\n        } else {\n          onChange(allSelectedLeafKeys.concat(currentLeafKeys));\n        }\n      },\n      className: classPrefix + \"-item\"\n    }, text);\n  }; // 渲染\n\n\n  var renderSelectAllLeafItem = function renderSelectAllLeafItem(columnOptions, index) {\n    var _a;\n\n    var text = (_a = props.selectAllText) === null || _a === void 0 ? void 0 : _a[index];\n\n    if (!text) {\n      return;\n    }\n\n    var currentLeafKeys = columnOptions.map(function (i) {\n      return i[valueName];\n    });\n    var allSelected = currentLeafKeys.every(function (i) {\n      return allSelectedLeafKeys.includes(i);\n    });\n    var halfSelected = allSelected ? false : currentLeafKeys.some(function (i) {\n      return allSelectedLeafKeys.includes(i);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: function onClick() {\n        if (allSelected) {\n          onChange(allSelectedLeafKeys.filter(function (i) {\n            return !currentLeafKeys.includes(i);\n          }));\n        } else {\n          onChange(allSelectedLeafKeys.concat(currentLeafKeys));\n        }\n      },\n      className: classNames(classPrefix + \"-item\", classPrefix + \"-item-leaf\")\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      className: classPrefix + \"-item-checkbox\",\n      checked: allSelected,\n      indeterminate: halfSelected\n    }), text);\n  }; // 渲染节点\n\n\n  var renderItem = function renderItem(option) {\n    var _classNames;\n\n    var isExpand = expandKeys.includes(option[valueName]);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: option[valueName],\n      onClick: function onClick() {\n        if (!isExpand) {\n          onItemSelect(option);\n        }\n      },\n      className: classNames(classPrefix + \"-item\", (_classNames = {}, _classNames[classPrefix + \"-item-expand\"] = isExpand, _classNames))\n    }, option[labelName], !!dotMap.get(option[valueName]) && /*#__PURE__*/React.createElement(\"div\", {\n      className: classPrefix + \"-dot\"\n    }));\n  }; // 渲染叶子节点\n\n\n  var renderLeafItem = function renderLeafItem(option) {\n    var isSelected = allSelectedLeafKeys.includes(option[valueName]);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: option[valueName],\n      onClick: function onClick() {\n        if (isSelected) {\n          onChange(allSelectedLeafKeys.filter(function (val) {\n            return val !== option[valueName];\n          }));\n        } else {\n          onChange([].concat(allSelectedLeafKeys, [option[valueName]]));\n        }\n      },\n      className: classNames(classPrefix + \"-item\", classPrefix + \"-item-leaf\")\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      className: classPrefix + \"-item-checkbox\",\n      checked: isSelected\n    }), option[labelName]);\n  };\n\n  var renderItems = function renderItems(columnOptions, index) {\n    if (columnOptions === void 0) {\n      columnOptions = [];\n    }\n\n    if (columnOptions.length === 0) {\n      return;\n    }\n\n    var isLeaf = deep === index + 1;\n\n    if (isLeaf) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, renderSelectAllLeafItem(columnOptions, index), columnOptions.map(function (option) {\n        return renderLeafItem(option);\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, renderSelectAllItem(columnOptions, index), columnOptions.map(function (option) {\n      return renderItem(option);\n    }));\n  };\n\n  var renderColumns = function renderColumns() {\n    var _a;\n\n    var columns = [];\n\n    for (var i = 0; i < deep; i++) {\n      var width = 100 / deep + \"%\"; // 两列的第一列宽度为 33.33，两列的第二列为 66.67%\n\n      if (deep === 2 && i === 0) {\n        width = \"33.33%\";\n      }\n\n      if (deep === 2 && i === 1) {\n        width = \"66.67%\";\n      }\n\n      var column = /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        className: classNames(classPrefix + \"-column\"),\n        style: {\n          width: width\n        }\n      }, renderItems(i === 0 ? props.options : (_a = optionsMap.get(expandKeys[i - 1])) === null || _a === void 0 ? void 0 : _a[childrenName], i));\n      columns.push(column);\n    }\n\n    return columns;\n  };\n\n  return withNativeProps(props, /*#__PURE__*/React.createElement(\"div\", {\n    className: classPrefix\n  }, renderColumns()));\n};","map":{"version":3,"sources":["/Users/brandonliu/Project/goairmart/antd-demo/node_modules/antd-mobile/es/components/tree-select/multiple.js"],"names":["classNames","React","useEffect","useMemo","withNativeProps","getTreeDeep","mergeProps","Checkbox","usePropsValue","devWarning","classPrefix","Multiple","p","props","options","fieldNames","allSelectText","defaultExpandKeys","defaultValue","labelName","label","valueName","value","childrenName","children","_usePropsValue","expandKeys","setExpandKeys","_usePropsValue2","setValue","getLeafKeys","option","keys","walker","op","_a","length","forEach","i","push","_useMemo","deep","optionsMap","Map","optionsParentMap","traverse","current","item","set","undefined","allSelectedLeafKeys","leafKeys","v","get","concat","dotMap","map","key","parentOption","onChange","targetKeys","groupKeys","unusedKeys","includes","parent","childrenKeys","every","filter","groupOptions","call","onItemSelect","parentNodes","unshift","next","onExpand","renderSelectAllItem","columnOptions","index","text","selectAllText","currentLeafKeys","allSelected","createElement","onClick","className","renderSelectAllLeafItem","halfSelected","some","checked","indeterminate","renderItem","_classNames","isExpand","renderLeafItem","isSelected","val","renderItems","isLeaf","Fragment","renderColumns","columns","width","column","style"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport React, { useEffect, useMemo } from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport { getTreeDeep } from '../../utils/tree';\nimport { mergeProps } from '../../utils/with-default-props';\nimport Checkbox from '../checkbox';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { devWarning } from '../../utils/dev-log';\nvar classPrefix = \"adm-tree-select-multiple\";\nexport var Multiple = function Multiple(p) {\n  var props = mergeProps({\n    options: [],\n    fieldNames: {},\n    allSelectText: [],\n    defaultExpandKeys: [],\n    defaultValue: []\n  }, p);\n  useEffect(function () {\n    devWarning('TreeSelect', 'TreeSelect.Multiple has been deprecated.');\n  }, []);\n  var labelName = props.fieldNames.label || 'label';\n  var valueName = props.fieldNames.value || 'value';\n  var childrenName = props.fieldNames.children || 'children'; // 打开的 keys\n\n  var _usePropsValue = usePropsValue({\n    value: props.expandKeys,\n    defaultValue: props.defaultExpandKeys\n  }),\n      expandKeys = _usePropsValue[0],\n      setExpandKeys = _usePropsValue[1]; // 选中的 value（聚合后）\n\n\n  var _usePropsValue2 = usePropsValue({\n    value: props.value,\n    defaultValue: props.defaultValue\n  }),\n      value = _usePropsValue2[0],\n      setValue = _usePropsValue2[1]; // 获取目标所有叶子节点 key 集合\n\n\n  var getLeafKeys = function getLeafKeys(option) {\n    var keys = [];\n\n    var walker = function walker(op) {\n      var _a;\n\n      if (!op) {\n        return;\n      }\n\n      if ((_a = op[childrenName]) === null || _a === void 0 ? void 0 : _a.length) {\n        op[childrenName].forEach(function (i) {\n          return walker(i);\n        });\n      } else {\n        keys.push(op[valueName]);\n      }\n    };\n\n    walker(option);\n    return keys;\n  };\n\n  var _useMemo = useMemo(function () {\n    var deep = getTreeDeep(props.options, childrenName);\n    var optionsMap = new Map();\n    var optionsParentMap = new Map();\n\n    function traverse(current, children) {\n      children.forEach(function (item) {\n        optionsParentMap.set(item[valueName], current);\n        optionsMap.set(item[valueName], item);\n\n        if (item[childrenName]) {\n          traverse(item, item[childrenName]);\n        }\n      });\n    }\n\n    traverse(undefined, props.options);\n    return [deep, optionsMap, optionsParentMap];\n  }, [props.options]),\n      deep = _useMemo[0],\n      optionsMap = _useMemo[1],\n      optionsParentMap = _useMemo[2]; // 将聚合的 value 拆分开，获得叶子节点的 value 集合\n\n\n  var allSelectedLeafKeys = useMemo(function () {\n    var leafKeys = [];\n    value.forEach(function (v) {\n      var option = optionsMap.get(v);\n      leafKeys = leafKeys.concat(getLeafKeys(option));\n    });\n    return leafKeys;\n  }, [value, optionsMap]); // 子级有被选中的节点集合\n\n  var dotMap = useMemo(function () {\n    var map = new Map(); // 遍历 allChildrenValues, 向上递归\n\n    var walker = function walker(key) {\n      var parentOption = optionsParentMap.get(key);\n\n      if (!parentOption) {\n        return;\n      }\n\n      map.set(parentOption[valueName], true);\n      walker(parentOption[valueName]);\n    };\n\n    allSelectedLeafKeys.forEach(function (key) {\n      map.set(key, true);\n      walker(key);\n    });\n    return map;\n  }, [optionsParentMap, value]);\n\n  var onChange = function onChange(targetKeys) {\n    var _a;\n\n    var groupKeys = [].concat(targetKeys);\n    var unusedKeys = [];\n\n    var walker = function walker(keys) {\n      keys.forEach(function (key) {\n        var _a;\n\n        if (unusedKeys.includes(key)) {\n          return;\n        }\n\n        var parent = optionsParentMap.get(key);\n\n        if (!parent) {\n          return;\n        }\n\n        var childrenKeys = ((_a = parent[childrenName]) === null || _a === void 0 ? void 0 : _a.map(function (i) {\n          return i[valueName];\n        })) || [];\n\n        if (childrenKeys.every(function (i) {\n          return groupKeys.includes(i);\n        })) {\n          groupKeys.push(parent[valueName]);\n          unusedKeys = unusedKeys.concat(childrenKeys);\n        }\n      });\n    }; // 遍历 deep 次 groupKeys，每次往上聚合一层\n\n\n    for (var i = 0; i < deep; i++) {\n      walker(groupKeys);\n    }\n\n    groupKeys = groupKeys.filter(function (i) {\n      return !unusedKeys.includes(i);\n    });\n    var groupOptions = groupKeys.map(function (i) {\n      return optionsMap.get(i);\n    });\n    setValue(groupKeys);\n    (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, groupKeys, groupOptions);\n  };\n\n  var onItemSelect = function onItemSelect(option) {\n    var _a;\n\n    var parentNodes = [];\n    var current = option;\n\n    while (current) {\n      parentNodes.unshift(current);\n      var next = optionsParentMap.get(current[valueName]);\n      current = next;\n    }\n\n    var keys = parentNodes.map(function (i) {\n      return i[valueName];\n    });\n    setExpandKeys(keys);\n    (_a = props.onExpand) === null || _a === void 0 ? void 0 : _a.call(props, keys, parentNodes);\n  }; // 渲染全选节点\n\n\n  var renderSelectAllItem = function renderSelectAllItem(columnOptions, index) {\n    var _a;\n\n    var text = (_a = props.selectAllText) === null || _a === void 0 ? void 0 : _a[index];\n\n    if (!text) {\n      return;\n    }\n\n    var currentLeafKeys = [];\n    columnOptions.forEach(function (option) {\n      currentLeafKeys = currentLeafKeys.concat(getLeafKeys(option));\n    });\n    var allSelected = currentLeafKeys.every(function (i) {\n      return allSelectedLeafKeys.includes(i);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: function onClick() {\n        if (allSelected) {\n          onChange(allSelectedLeafKeys.filter(function (i) {\n            return !currentLeafKeys.includes(i);\n          }));\n        } else {\n          onChange(allSelectedLeafKeys.concat(currentLeafKeys));\n        }\n      },\n      className: classPrefix + \"-item\"\n    }, text);\n  }; // 渲染\n\n\n  var renderSelectAllLeafItem = function renderSelectAllLeafItem(columnOptions, index) {\n    var _a;\n\n    var text = (_a = props.selectAllText) === null || _a === void 0 ? void 0 : _a[index];\n\n    if (!text) {\n      return;\n    }\n\n    var currentLeafKeys = columnOptions.map(function (i) {\n      return i[valueName];\n    });\n    var allSelected = currentLeafKeys.every(function (i) {\n      return allSelectedLeafKeys.includes(i);\n    });\n    var halfSelected = allSelected ? false : currentLeafKeys.some(function (i) {\n      return allSelectedLeafKeys.includes(i);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: function onClick() {\n        if (allSelected) {\n          onChange(allSelectedLeafKeys.filter(function (i) {\n            return !currentLeafKeys.includes(i);\n          }));\n        } else {\n          onChange(allSelectedLeafKeys.concat(currentLeafKeys));\n        }\n      },\n      className: classNames(classPrefix + \"-item\", classPrefix + \"-item-leaf\")\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      className: classPrefix + \"-item-checkbox\",\n      checked: allSelected,\n      indeterminate: halfSelected\n    }), text);\n  }; // 渲染节点\n\n\n  var renderItem = function renderItem(option) {\n    var _classNames;\n\n    var isExpand = expandKeys.includes(option[valueName]);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: option[valueName],\n      onClick: function onClick() {\n        if (!isExpand) {\n          onItemSelect(option);\n        }\n      },\n      className: classNames(classPrefix + \"-item\", (_classNames = {}, _classNames[classPrefix + \"-item-expand\"] = isExpand, _classNames))\n    }, option[labelName], !!dotMap.get(option[valueName]) && /*#__PURE__*/React.createElement(\"div\", {\n      className: classPrefix + \"-dot\"\n    }));\n  }; // 渲染叶子节点\n\n\n  var renderLeafItem = function renderLeafItem(option) {\n    var isSelected = allSelectedLeafKeys.includes(option[valueName]);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: option[valueName],\n      onClick: function onClick() {\n        if (isSelected) {\n          onChange(allSelectedLeafKeys.filter(function (val) {\n            return val !== option[valueName];\n          }));\n        } else {\n          onChange([].concat(allSelectedLeafKeys, [option[valueName]]));\n        }\n      },\n      className: classNames(classPrefix + \"-item\", classPrefix + \"-item-leaf\")\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      className: classPrefix + \"-item-checkbox\",\n      checked: isSelected\n    }), option[labelName]);\n  };\n\n  var renderItems = function renderItems(columnOptions, index) {\n    if (columnOptions === void 0) {\n      columnOptions = [];\n    }\n\n    if (columnOptions.length === 0) {\n      return;\n    }\n\n    var isLeaf = deep === index + 1;\n\n    if (isLeaf) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, renderSelectAllLeafItem(columnOptions, index), columnOptions.map(function (option) {\n        return renderLeafItem(option);\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, renderSelectAllItem(columnOptions, index), columnOptions.map(function (option) {\n      return renderItem(option);\n    }));\n  };\n\n  var renderColumns = function renderColumns() {\n    var _a;\n\n    var columns = [];\n\n    for (var i = 0; i < deep; i++) {\n      var width = 100 / deep + \"%\"; // 两列的第一列宽度为 33.33，两列的第二列为 66.67%\n\n      if (deep === 2 && i === 0) {\n        width = \"33.33%\";\n      }\n\n      if (deep === 2 && i === 1) {\n        width = \"66.67%\";\n      }\n\n      var column = /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        className: classNames(classPrefix + \"-column\"),\n        style: {\n          width: width\n        }\n      }, renderItems(i === 0 ? props.options : (_a = optionsMap.get(expandKeys[i - 1])) === null || _a === void 0 ? void 0 : _a[childrenName], i));\n      columns.push(column);\n    }\n\n    return columns;\n  };\n\n  return withNativeProps(props, /*#__PURE__*/React.createElement(\"div\", {\n    className: classPrefix\n  }, renderColumns()));\n};"]},"metadata":{},"sourceType":"module"}