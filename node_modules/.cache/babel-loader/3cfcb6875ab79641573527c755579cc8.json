{"ast":null,"code":"import React, { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport classNames from 'classnames';\nimport Button from '../button';\nimport { Popover } from './popover';\nvar classPrefix = \"adm-popover\";\nexport var PopMenu = /*#__PURE__*/forwardRef(function (props, ref) {\n  var innerRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return innerRef.current;\n  }, []);\n\n  var _onClick = useCallback(function (e) {\n    var _a;\n\n    var onAction = props.onAction;\n\n    if (onAction) {\n      onAction(e);\n    }\n\n    (_a = innerRef.current) === null || _a === void 0 ? void 0 : _a.hide();\n  }, [props.onAction]);\n\n  var overlay = useMemo(function () {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, (props.actions || []).map(function (ele, index) {\n      var _classNames;\n\n      var _a;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(classPrefix + \"-inner-menu\", (_classNames = {}, _classNames[classPrefix + \"-inner-menu-with-icon\"] = !!ele.icon, _classNames)),\n        key: (_a = ele.key) !== null && _a !== void 0 ? _a : index\n      }, /*#__PURE__*/React.createElement(Button, {\n        disabled: ele.disabled,\n        onClick: function onClick() {\n          var _a;\n\n          if (!ele.disabled) {\n            _onClick(ele);\n\n            (_a = ele.onClick) === null || _a === void 0 ? void 0 : _a.call(ele);\n          }\n        },\n        fill: 'none',\n        block: true\n      }, ele.icon && /*#__PURE__*/React.createElement(\"span\", {\n        className: classPrefix + \"-inner-menu-icon\"\n      }, ele.icon), ele.text));\n    }));\n  }, [props.actions, _onClick]);\n  return /*#__PURE__*/React.createElement(Popover, Object.assign({\n    ref: innerRef\n  }, props, {\n    overlayClassName: classNames(classPrefix + \"-menu\", props.overlayClassName),\n    content: overlay\n  }), props.children);\n});","map":{"version":3,"sources":["/Users/brandonliu/Project/goairmart/antd-demo/node_modules/antd-mobile/es/components/popover/pop-menu.js"],"names":["React","forwardRef","useCallback","useImperativeHandle","useMemo","useRef","classNames","Button","Popover","classPrefix","PopMenu","props","ref","innerRef","current","_onClick","e","_a","onAction","hide","overlay","createElement","Fragment","actions","map","ele","index","_classNames","className","icon","key","disabled","onClick","call","fill","block","text","Object","assign","overlayClassName","content","children"],"mappings":"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","sourcesContent":["import React, { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport classNames from 'classnames';\nimport Button from '../button';\nimport { Popover } from './popover';\nvar classPrefix = \"adm-popover\";\nexport var PopMenu = /*#__PURE__*/forwardRef(function (props, ref) {\n  var innerRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return innerRef.current;\n  }, []);\n\n  var _onClick = useCallback(function (e) {\n    var _a;\n\n    var onAction = props.onAction;\n\n    if (onAction) {\n      onAction(e);\n    }\n\n    (_a = innerRef.current) === null || _a === void 0 ? void 0 : _a.hide();\n  }, [props.onAction]);\n\n  var overlay = useMemo(function () {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, (props.actions || []).map(function (ele, index) {\n      var _classNames;\n\n      var _a;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(classPrefix + \"-inner-menu\", (_classNames = {}, _classNames[classPrefix + \"-inner-menu-with-icon\"] = !!ele.icon, _classNames)),\n        key: (_a = ele.key) !== null && _a !== void 0 ? _a : index\n      }, /*#__PURE__*/React.createElement(Button, {\n        disabled: ele.disabled,\n        onClick: function onClick() {\n          var _a;\n\n          if (!ele.disabled) {\n            _onClick(ele);\n\n            (_a = ele.onClick) === null || _a === void 0 ? void 0 : _a.call(ele);\n          }\n        },\n        fill: 'none',\n        block: true\n      }, ele.icon && /*#__PURE__*/React.createElement(\"span\", {\n        className: classPrefix + \"-inner-menu-icon\"\n      }, ele.icon), ele.text));\n    }));\n  }, [props.actions, _onClick]);\n  return /*#__PURE__*/React.createElement(Popover, Object.assign({\n    ref: innerRef\n  }, props, {\n    overlayClassName: classNames(classPrefix + \"-menu\", props.overlayClassName),\n    content: overlay\n  }), props.children);\n});"]},"metadata":{},"sourceType":"module"}