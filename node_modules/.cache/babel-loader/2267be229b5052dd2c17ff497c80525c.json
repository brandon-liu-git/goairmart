{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport useAntdTable from '../useAntdTable';\nimport { fieldAdapter, resultAdapter } from './fusionAdapter';\n\nfunction useFusionTable(service, options) {\n  var ret = useAntdTable(service, __assign(__assign({}, options), {\n    form: options.field ? fieldAdapter(options.field) : undefined\n  }));\n  return resultAdapter(ret);\n}\n\nexport default useFusionTable;","map":{"version":3,"sources":["/Users/brandonliu/Project/goairmart/antd-demo/node_modules/ahooks/es/useFusionTable/index.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","useAntdTable","fieldAdapter","resultAdapter","useFusionTable","service","options","ret","form","field","undefined"],"mappings":"AAAA,IAAIA,QAAQ,GAAG,QAAQ,KAAKA,QAAb,IAAyB,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,CAAV,EAAa;AACvC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACnDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AAEA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB;AACf,YAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EAAgDN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACjD;AACF;;AAED,WAAON,CAAP;AACD,GAVD;;AAYA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACD,CAdD;;AAgBA,OAAOO,YAAP,MAAyB,iBAAzB;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,iBAA5C;;AAEA,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,OAAjC,EAA0C;AACxC,MAAIC,GAAG,GAAGN,YAAY,CAACI,OAAD,EAAUlB,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKmB,OAAL,CAAT,EAAwB;AAC9DE,IAAAA,IAAI,EAAEF,OAAO,CAACG,KAAR,GAAgBP,YAAY,CAACI,OAAO,CAACG,KAAT,CAA5B,GAA8CC;AADU,GAAxB,CAAlB,CAAtB;AAGA,SAAOP,aAAa,CAACI,GAAD,CAApB;AACD;;AAED,eAAeH,cAAf","sourcesContent":["var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport useAntdTable from '../useAntdTable';\nimport { fieldAdapter, resultAdapter } from './fusionAdapter';\n\nfunction useFusionTable(service, options) {\n  var ret = useAntdTable(service, __assign(__assign({}, options), {\n    form: options.field ? fieldAdapter(options.field) : undefined\n  }));\n  return resultAdapter(ret);\n}\n\nexport default useFusionTable;"]},"metadata":{},"sourceType":"module"}