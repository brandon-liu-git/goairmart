{"ast":null,"code":"import React, { useRef } from 'react';\nimport { useGesture } from '@use-gesture/react';\nimport { useSpring, animated } from '@react-spring/web';\nvar classPrefix = \"adm-image-viewer\";\nexport var Slide = function Slide(props) {\n  var dragLockRef = props.dragLockRef;\n  var controlRef = useRef(null);\n\n  var _useSpring = useSpring(function () {\n    return {\n      zoom: 1,\n      x: 0,\n      y: 0,\n      config: {\n        tension: 300\n      }\n    };\n  }),\n      _useSpring$ = _useSpring[0],\n      zoom = _useSpring$.zoom,\n      x = _useSpring$.x,\n      y = _useSpring$.y,\n      api = _useSpring[1];\n\n  var pinchLockRef = useRef(false);\n  useGesture({\n    onDrag: function onDrag(state) {\n      if (state.tap && state.elapsedTime > 0) {\n        // 判断点击时间>0是为了过滤掉非正常操作，例如用户长按选择图片之后的取消操作（也是一次点击）\n        props.onTap();\n        return;\n      }\n\n      var currentZoom = zoom.get();\n\n      if (dragLockRef) {\n        dragLockRef.current = currentZoom !== 1;\n      }\n\n      if (!pinchLockRef.current && currentZoom <= 1) {\n        api.start({\n          x: 0,\n          y: 0\n        });\n      } else {\n        var _state$offset = state.offset,\n            _x = _state$offset[0],\n            _y = _state$offset[1];\n        api.start({\n          x: _x,\n          y: _y,\n          immediate: true\n        });\n      }\n    },\n    onPinch: function onPinch(state) {\n      var _a;\n\n      pinchLockRef.current = !state.last;\n      var _state$offset2 = state.offset,\n          d = _state$offset2[0];\n      if (d < 0) return; // pinch的rubberband不会自动弹回bound，这里手动实现了\n\n      var zoom = state.last ? Math.max(Math.min(d, props.maxZoom), 1) : d;\n      api.start({\n        zoom: zoom,\n        immediate: !state.last\n      });\n      (_a = props.onZoomChange) === null || _a === void 0 ? void 0 : _a.call(props, zoom);\n\n      if (state.last && zoom <= 1) {\n        api.start({\n          x: 0,\n          y: 0\n        });\n\n        if (dragLockRef) {\n          dragLockRef.current = false;\n        }\n      } else {\n        if (dragLockRef) {\n          dragLockRef.current = true;\n        }\n      }\n    }\n  }, {\n    target: controlRef,\n    drag: {\n      // filterTaps: true,\n      from: function from() {\n        return [x.get(), y.get()];\n      }\n    },\n    pinch: {\n      transform: function transform(_ref) {\n        var d = _ref[0],\n            a = _ref[1];\n        return [d < 0 ? d * 0.5 : d * 2, 0];\n      },\n      from: function from() {\n        return [zoom.get(), 0];\n      }\n    },\n    pointer: {\n      touch: true\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classPrefix + \"-slide\",\n    onPointerMove: function onPointerMove(e) {\n      if (zoom.get() !== 1) {\n        e.stopPropagation();\n      }\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classPrefix + \"-control\",\n    ref: controlRef\n  }, /*#__PURE__*/React.createElement(animated.div, {\n    className: classPrefix + \"-image-wrapper\",\n    style: {\n      scale: zoom,\n      x: x,\n      y: y\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.image,\n    draggable: false\n  }))));\n};","map":{"version":3,"sources":["/Users/brandonliu/Project/goairmart/antd-demo/node_modules/antd-mobile/es/components/image-viewer/slide.js"],"names":["React","useRef","useGesture","useSpring","animated","classPrefix","Slide","props","dragLockRef","controlRef","_useSpring","zoom","x","y","config","tension","_useSpring$","api","pinchLockRef","onDrag","state","tap","elapsedTime","onTap","currentZoom","get","current","start","_state$offset","offset","_x","_y","immediate","onPinch","_a","last","_state$offset2","d","Math","max","min","maxZoom","onZoomChange","call","target","drag","from","pinch","transform","_ref","a","pointer","touch","createElement","className","onPointerMove","e","stopPropagation","ref","div","style","scale","src","image","draggable"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { useGesture } from '@use-gesture/react';\nimport { useSpring, animated } from '@react-spring/web';\nvar classPrefix = \"adm-image-viewer\";\nexport var Slide = function Slide(props) {\n  var dragLockRef = props.dragLockRef;\n  var controlRef = useRef(null);\n\n  var _useSpring = useSpring(function () {\n    return {\n      zoom: 1,\n      x: 0,\n      y: 0,\n      config: {\n        tension: 300\n      }\n    };\n  }),\n      _useSpring$ = _useSpring[0],\n      zoom = _useSpring$.zoom,\n      x = _useSpring$.x,\n      y = _useSpring$.y,\n      api = _useSpring[1];\n\n  var pinchLockRef = useRef(false);\n  useGesture({\n    onDrag: function onDrag(state) {\n      if (state.tap && state.elapsedTime > 0) {\n        // 判断点击时间>0是为了过滤掉非正常操作，例如用户长按选择图片之后的取消操作（也是一次点击）\n        props.onTap();\n        return;\n      }\n\n      var currentZoom = zoom.get();\n\n      if (dragLockRef) {\n        dragLockRef.current = currentZoom !== 1;\n      }\n\n      if (!pinchLockRef.current && currentZoom <= 1) {\n        api.start({\n          x: 0,\n          y: 0\n        });\n      } else {\n        var _state$offset = state.offset,\n            _x = _state$offset[0],\n            _y = _state$offset[1];\n        api.start({\n          x: _x,\n          y: _y,\n          immediate: true\n        });\n      }\n    },\n    onPinch: function onPinch(state) {\n      var _a;\n\n      pinchLockRef.current = !state.last;\n      var _state$offset2 = state.offset,\n          d = _state$offset2[0];\n      if (d < 0) return; // pinch的rubberband不会自动弹回bound，这里手动实现了\n\n      var zoom = state.last ? Math.max(Math.min(d, props.maxZoom), 1) : d;\n      api.start({\n        zoom: zoom,\n        immediate: !state.last\n      });\n      (_a = props.onZoomChange) === null || _a === void 0 ? void 0 : _a.call(props, zoom);\n\n      if (state.last && zoom <= 1) {\n        api.start({\n          x: 0,\n          y: 0\n        });\n\n        if (dragLockRef) {\n          dragLockRef.current = false;\n        }\n      } else {\n        if (dragLockRef) {\n          dragLockRef.current = true;\n        }\n      }\n    }\n  }, {\n    target: controlRef,\n    drag: {\n      // filterTaps: true,\n      from: function from() {\n        return [x.get(), y.get()];\n      }\n    },\n    pinch: {\n      transform: function transform(_ref) {\n        var d = _ref[0],\n            a = _ref[1];\n        return [d < 0 ? d * 0.5 : d * 2, 0];\n      },\n      from: function from() {\n        return [zoom.get(), 0];\n      }\n    },\n    pointer: {\n      touch: true\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classPrefix + \"-slide\",\n    onPointerMove: function onPointerMove(e) {\n      if (zoom.get() !== 1) {\n        e.stopPropagation();\n      }\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classPrefix + \"-control\",\n    ref: controlRef\n  }, /*#__PURE__*/React.createElement(animated.div, {\n    className: classPrefix + \"-image-wrapper\",\n    style: {\n      scale: zoom,\n      x: x,\n      y: y\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.image,\n    draggable: false\n  }))));\n};"]},"metadata":{},"sourceType":"module"}