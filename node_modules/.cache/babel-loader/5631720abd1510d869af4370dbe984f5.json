{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { useCallback, useRef, useState } from 'react';\nimport useUnmount from '../useUnmount';\n\nvar useRafState = function useRafState(initialState) {\n  var frame = useRef(0);\n\n  var _a = __read(useState(initialState), 2),\n      state = _a[0],\n      setState = _a[1];\n\n  var setRafState = useCallback(function (value) {\n    cancelAnimationFrame(frame.current);\n    frame.current = requestAnimationFrame(function () {\n      setState(value);\n    });\n  }, []);\n  useUnmount(function () {\n    cancelAnimationFrame(frame.current);\n  });\n  return [state, setRafState];\n};\n\nexport default useRafState;","map":{"version":3,"sources":["/Users/brandonliu/Project/goairmart/antd-demo/node_modules/ahooks/es/useSize/useRafState.js"],"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","useCallback","useRef","useState","useUnmount","useRafState","initialState","frame","_a","state","setState","setRafState","cancelAnimationFrame","current","requestAnimationFrame"],"mappings":"AAAA,IAAIA,MAAM,GAAG,QAAQ,KAAKA,MAAb,IAAuB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAClD,MAAIC,CAAC,GAAG,OAAOC,MAAP,KAAkB,UAAlB,IAAgCH,CAAC,CAACG,MAAM,CAACC,QAAR,CAAzC;AACA,MAAI,CAACF,CAAL,EAAQ,OAAOF,CAAP;AACR,MAAIK,CAAC,GAAGH,CAAC,CAACI,IAAF,CAAON,CAAP,CAAR;AAAA,MACIO,CADJ;AAAA,MAEIC,EAAE,GAAG,EAFT;AAAA,MAGIC,CAHJ;;AAKA,MAAI;AACF,WAAO,CAACR,CAAC,KAAK,KAAK,CAAX,IAAgBA,CAAC,KAAK,CAAvB,KAA6B,CAAC,CAACM,CAAC,GAAGF,CAAC,CAACK,IAAF,EAAL,EAAeC,IAApD,EAA0D;AACxDH,MAAAA,EAAE,CAACI,IAAH,CAAQL,CAAC,CAACM,KAAV;AACD;AACF,GAJD,CAIE,OAAOC,KAAP,EAAc;AACdL,IAAAA,CAAC,GAAG;AACFK,MAAAA,KAAK,EAAEA;AADL,KAAJ;AAGD,GARD,SAQU;AACR,QAAI;AACF,UAAIP,CAAC,IAAI,CAACA,CAAC,CAACI,IAAR,KAAiBT,CAAC,GAAGG,CAAC,CAAC,QAAD,CAAtB,CAAJ,EAAuCH,CAAC,CAACI,IAAF,CAAOD,CAAP;AACxC,KAFD,SAEU;AACR,UAAII,CAAJ,EAAO,MAAMA,CAAC,CAACK,KAAR;AACR;AACF;;AAED,SAAON,EAAP;AACD,CAzBD;;AA2BA,SAASO,WAAT,EAAsBC,MAAtB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAEA,IAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBC,YAArB,EAAmC;AACnD,MAAIC,KAAK,GAAGL,MAAM,CAAC,CAAD,CAAlB;;AAEA,MAAIM,EAAE,GAAGvB,MAAM,CAACkB,QAAQ,CAACG,YAAD,CAAT,EAAyB,CAAzB,CAAf;AAAA,MACIG,KAAK,GAAGD,EAAE,CAAC,CAAD,CADd;AAAA,MAEIE,QAAQ,GAAGF,EAAE,CAAC,CAAD,CAFjB;;AAIA,MAAIG,WAAW,GAAGV,WAAW,CAAC,UAAUF,KAAV,EAAiB;AAC7Ca,IAAAA,oBAAoB,CAACL,KAAK,CAACM,OAAP,CAApB;AACAN,IAAAA,KAAK,CAACM,OAAN,GAAgBC,qBAAqB,CAAC,YAAY;AAChDJ,MAAAA,QAAQ,CAACX,KAAD,CAAR;AACD,KAFoC,CAArC;AAGD,GAL4B,EAK1B,EAL0B,CAA7B;AAMAK,EAAAA,UAAU,CAAC,YAAY;AACrBQ,IAAAA,oBAAoB,CAACL,KAAK,CAACM,OAAP,CAApB;AACD,GAFS,CAAV;AAGA,SAAO,CAACJ,KAAD,EAAQE,WAAR,CAAP;AACD,CAjBD;;AAmBA,eAAeN,WAAf","sourcesContent":["var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { useCallback, useRef, useState } from 'react';\nimport useUnmount from '../useUnmount';\n\nvar useRafState = function useRafState(initialState) {\n  var frame = useRef(0);\n\n  var _a = __read(useState(initialState), 2),\n      state = _a[0],\n      setState = _a[1];\n\n  var setRafState = useCallback(function (value) {\n    cancelAnimationFrame(frame.current);\n    frame.current = requestAnimationFrame(function () {\n      setState(value);\n    });\n  }, []);\n  useUnmount(function () {\n    cancelAnimationFrame(frame.current);\n  });\n  return [state, setRafState];\n};\n\nexport default useRafState;"]},"metadata":{},"sourceType":"module"}