{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport useBoolean from '../useBoolean';\nimport useEventListener from '../useEventListener';\nexport default (function (target, options) {\n  var _a = options || {},\n      onEnter = _a.onEnter,\n      onLeave = _a.onLeave;\n\n  var _b = __read(useBoolean(false), 2),\n      state = _b[0],\n      _c = _b[1],\n      setTrue = _c.setTrue,\n      setFalse = _c.setFalse;\n\n  useEventListener('mouseenter', function () {\n    onEnter && onEnter();\n    setTrue();\n  }, {\n    target: target\n  });\n  useEventListener('mouseleave', function () {\n    onLeave && onLeave();\n    setFalse();\n  }, {\n    target: target\n  });\n  return state;\n});","map":{"version":3,"sources":["/Users/brandonliu/Project/goairmart/antd-demo/node_modules/ahooks/es/useHover/index.js"],"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","useBoolean","useEventListener","target","options","_a","onEnter","onLeave","_b","state","_c","setTrue","setFalse"],"mappings":"AAAA,IAAIA,MAAM,GAAG,QAAQ,KAAKA,MAAb,IAAuB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAClD,MAAIC,CAAC,GAAG,OAAOC,MAAP,KAAkB,UAAlB,IAAgCH,CAAC,CAACG,MAAM,CAACC,QAAR,CAAzC;AACA,MAAI,CAACF,CAAL,EAAQ,OAAOF,CAAP;AACR,MAAIK,CAAC,GAAGH,CAAC,CAACI,IAAF,CAAON,CAAP,CAAR;AAAA,MACIO,CADJ;AAAA,MAEIC,EAAE,GAAG,EAFT;AAAA,MAGIC,CAHJ;;AAKA,MAAI;AACF,WAAO,CAACR,CAAC,KAAK,KAAK,CAAX,IAAgBA,CAAC,KAAK,CAAvB,KAA6B,CAAC,CAACM,CAAC,GAAGF,CAAC,CAACK,IAAF,EAAL,EAAeC,IAApD,EAA0D;AACxDH,MAAAA,EAAE,CAACI,IAAH,CAAQL,CAAC,CAACM,KAAV;AACD;AACF,GAJD,CAIE,OAAOC,KAAP,EAAc;AACdL,IAAAA,CAAC,GAAG;AACFK,MAAAA,KAAK,EAAEA;AADL,KAAJ;AAGD,GARD,SAQU;AACR,QAAI;AACF,UAAIP,CAAC,IAAI,CAACA,CAAC,CAACI,IAAR,KAAiBT,CAAC,GAAGG,CAAC,CAAC,QAAD,CAAtB,CAAJ,EAAuCH,CAAC,CAACI,IAAF,CAAOD,CAAP;AACxC,KAFD,SAEU;AACR,UAAII,CAAJ,EAAO,MAAMA,CAAC,CAACK,KAAR;AACR;AACF;;AAED,SAAON,EAAP;AACD,CAzBD;;AA2BA,OAAOO,UAAP,MAAuB,eAAvB;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,gBAAgB,UAAUC,MAAV,EAAkBC,OAAlB,EAA2B;AACzC,MAAIC,EAAE,GAAGD,OAAO,IAAI,EAApB;AAAA,MACIE,OAAO,GAAGD,EAAE,CAACC,OADjB;AAAA,MAEIC,OAAO,GAAGF,EAAE,CAACE,OAFjB;;AAIA,MAAIC,EAAE,GAAGvB,MAAM,CAACgB,UAAU,CAAC,KAAD,CAAX,EAAoB,CAApB,CAAf;AAAA,MACIQ,KAAK,GAAGD,EAAE,CAAC,CAAD,CADd;AAAA,MAEIE,EAAE,GAAGF,EAAE,CAAC,CAAD,CAFX;AAAA,MAGIG,OAAO,GAAGD,EAAE,CAACC,OAHjB;AAAA,MAIIC,QAAQ,GAAGF,EAAE,CAACE,QAJlB;;AAMAV,EAAAA,gBAAgB,CAAC,YAAD,EAAe,YAAY;AACzCI,IAAAA,OAAO,IAAIA,OAAO,EAAlB;AACAK,IAAAA,OAAO;AACR,GAHe,EAGb;AACDR,IAAAA,MAAM,EAAEA;AADP,GAHa,CAAhB;AAMAD,EAAAA,gBAAgB,CAAC,YAAD,EAAe,YAAY;AACzCK,IAAAA,OAAO,IAAIA,OAAO,EAAlB;AACAK,IAAAA,QAAQ;AACT,GAHe,EAGb;AACDT,IAAAA,MAAM,EAAEA;AADP,GAHa,CAAhB;AAMA,SAAOM,KAAP;AACD,CAxBD","sourcesContent":["var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport useBoolean from '../useBoolean';\nimport useEventListener from '../useEventListener';\nexport default (function (target, options) {\n  var _a = options || {},\n      onEnter = _a.onEnter,\n      onLeave = _a.onLeave;\n\n  var _b = __read(useBoolean(false), 2),\n      state = _b[0],\n      _c = _b[1],\n      setTrue = _c.setTrue,\n      setFalse = _c.setFalse;\n\n  useEventListener('mouseenter', function () {\n    onEnter && onEnter();\n    setTrue();\n  }, {\n    target: target\n  });\n  useEventListener('mouseleave', function () {\n    onLeave && onLeave();\n    setFalse();\n  }, {\n    target: target\n  });\n  return state;\n});"]},"metadata":{},"sourceType":"module"}