{"ast":null,"code":"import React, { useState, useRef, memo } from 'react';\nimport classNames from 'classnames';\nimport { CloseOutline, SoundOutline } from 'antd-mobile-icons';\nimport { useTimeout } from 'ahooks';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { withNativeProps } from '../../utils/native-props';\nimport { useResizeEffect } from '../../utils/use-resize-effect';\nimport { useMutationEffect } from '../../utils/use-mutation-effect';\nvar classPrefix = \"adm-notice-bar\";\nvar defaultProps = {\n  color: 'default',\n  delay: 2000,\n  speed: 50\n};\nexport var NoticeBar = /*#__PURE__*/memo(function (p) {\n  var props = mergeProps(defaultProps, p);\n  var containerRef = useRef(null);\n  var textRef = useRef(null);\n\n  var _useState = useState(true),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  var speed = props.speed;\n  var delayLockRef = useRef(true);\n  var animatingRef = useRef(false);\n\n  function start() {\n    if (delayLockRef.current) return;\n    var container = containerRef.current;\n    var text = textRef.current;\n    if (!container || !text) return;\n\n    if (container.offsetWidth >= text.offsetWidth) {\n      animatingRef.current = false;\n      text.style.removeProperty('transition-duration');\n      text.style.removeProperty('transform');\n      return;\n    }\n\n    if (animatingRef.current) return;\n    var initial = !text.style.transform;\n    text.style.transitionDuration = '0s';\n\n    if (initial) {\n      text.style.transform = 'translateX(0)';\n    } else {\n      text.style.transform = \"translateX(\" + container.offsetWidth + \"px)\";\n    }\n\n    var distance = initial ? text.offsetWidth : container.offsetWidth + text.offsetWidth;\n    animatingRef.current = true;\n    text.style.transitionDuration = Math.round(distance / speed) + \"s\";\n    text.style.transform = \"translateX(-\" + text.offsetWidth + \"px)\";\n  }\n\n  useTimeout(function () {\n    delayLockRef.current = false;\n    start();\n  }, props.delay);\n  useResizeEffect(function (text) {\n    start();\n  }, containerRef);\n  useMutationEffect(function () {\n    console.log('text mutation effect');\n    start();\n  }, textRef, {\n    subtree: true,\n    childList: true,\n    characterData: true\n  });\n  if (!visible) return null;\n  return withNativeProps(props, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(classPrefix, classPrefix + \"-\" + props.color)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classPrefix + \"-left\"\n  }, 'icon' in props ? props.icon : /*#__PURE__*/React.createElement(SoundOutline, null)), /*#__PURE__*/React.createElement(\"span\", {\n    ref: containerRef,\n    className: classPrefix + \"-content\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onTransitionEnd: function onTransitionEnd() {\n      animatingRef.current = false;\n      start();\n    },\n    ref: textRef,\n    className: classPrefix + \"-content-inner\"\n  }, props.content)), (props.closeable || props.extra) && /*#__PURE__*/React.createElement(\"span\", {\n    className: classPrefix + \"-right\"\n  }, props.extra, props.closeable && /*#__PURE__*/React.createElement(CloseOutline, {\n    onClick: function onClick() {\n      var _a;\n\n      setVisible(false);\n      (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);\n    }\n  }))));\n});","map":{"version":3,"sources":["/Users/brandonliu/Project/goairmart/antd-demo/node_modules/antd-mobile/es/components/notice-bar/notice-bar.js"],"names":["React","useState","useRef","memo","classNames","CloseOutline","SoundOutline","useTimeout","mergeProps","withNativeProps","useResizeEffect","useMutationEffect","classPrefix","defaultProps","color","delay","speed","NoticeBar","p","props","containerRef","textRef","_useState","visible","setVisible","delayLockRef","animatingRef","start","current","container","text","offsetWidth","style","removeProperty","initial","transform","transitionDuration","distance","Math","round","console","log","subtree","childList","characterData","createElement","className","icon","ref","onTransitionEnd","content","closeable","extra","onClick","_a","onClose","call"],"mappings":"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","sourcesContent":["import React, { useState, useRef, memo } from 'react';\nimport classNames from 'classnames';\nimport { CloseOutline, SoundOutline } from 'antd-mobile-icons';\nimport { useTimeout } from 'ahooks';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { withNativeProps } from '../../utils/native-props';\nimport { useResizeEffect } from '../../utils/use-resize-effect';\nimport { useMutationEffect } from '../../utils/use-mutation-effect';\nvar classPrefix = \"adm-notice-bar\";\nvar defaultProps = {\n  color: 'default',\n  delay: 2000,\n  speed: 50\n};\nexport var NoticeBar = /*#__PURE__*/memo(function (p) {\n  var props = mergeProps(defaultProps, p);\n  var containerRef = useRef(null);\n  var textRef = useRef(null);\n\n  var _useState = useState(true),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  var speed = props.speed;\n  var delayLockRef = useRef(true);\n  var animatingRef = useRef(false);\n\n  function start() {\n    if (delayLockRef.current) return;\n    var container = containerRef.current;\n    var text = textRef.current;\n    if (!container || !text) return;\n\n    if (container.offsetWidth >= text.offsetWidth) {\n      animatingRef.current = false;\n      text.style.removeProperty('transition-duration');\n      text.style.removeProperty('transform');\n      return;\n    }\n\n    if (animatingRef.current) return;\n    var initial = !text.style.transform;\n    text.style.transitionDuration = '0s';\n\n    if (initial) {\n      text.style.transform = 'translateX(0)';\n    } else {\n      text.style.transform = \"translateX(\" + container.offsetWidth + \"px)\";\n    }\n\n    var distance = initial ? text.offsetWidth : container.offsetWidth + text.offsetWidth;\n    animatingRef.current = true;\n    text.style.transitionDuration = Math.round(distance / speed) + \"s\";\n    text.style.transform = \"translateX(-\" + text.offsetWidth + \"px)\";\n  }\n\n  useTimeout(function () {\n    delayLockRef.current = false;\n    start();\n  }, props.delay);\n  useResizeEffect(function (text) {\n    start();\n  }, containerRef);\n  useMutationEffect(function () {\n    console.log('text mutation effect');\n    start();\n  }, textRef, {\n    subtree: true,\n    childList: true,\n    characterData: true\n  });\n  if (!visible) return null;\n  return withNativeProps(props, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(classPrefix, classPrefix + \"-\" + props.color)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classPrefix + \"-left\"\n  }, 'icon' in props ? props.icon : /*#__PURE__*/React.createElement(SoundOutline, null)), /*#__PURE__*/React.createElement(\"span\", {\n    ref: containerRef,\n    className: classPrefix + \"-content\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onTransitionEnd: function onTransitionEnd() {\n      animatingRef.current = false;\n      start();\n    },\n    ref: textRef,\n    className: classPrefix + \"-content-inner\"\n  }, props.content)), (props.closeable || props.extra) && /*#__PURE__*/React.createElement(\"span\", {\n    className: classPrefix + \"-right\"\n  }, props.extra, props.closeable && /*#__PURE__*/React.createElement(CloseOutline, {\n    onClick: function onClick() {\n      var _a;\n\n      setVisible(false);\n      (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);\n    }\n  }))));\n});"]},"metadata":{},"sourceType":"module"}