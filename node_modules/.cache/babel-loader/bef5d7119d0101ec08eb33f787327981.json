{"ast":null,"code":"import { useTouch } from './use-touch';\nimport { useEffect } from 'react';\nimport { getScrollParent } from './get-scroll-parent';\nimport { supportsPassive } from './supports-passive';\nvar totalLockCount = 0;\nvar BODY_LOCK_CLASS = 'adm-overflow-hidden'; // 移植自vant：https://github.com/youzan/vant/blob/HEAD/src/composables/use-lock-scroll.ts\n\nexport function useLockScroll(rootRef, shouldLock) {\n  var touch = useTouch();\n\n  var onTouchMove = function onTouchMove(event) {\n    touch.move(event);\n    var direction = touch.deltaY.current > 0 ? '10' : '01';\n    var el = getScrollParent(event.target, rootRef.current);\n    if (!el) return;\n    var scrollHeight = el.scrollHeight,\n        offsetHeight = el.offsetHeight,\n        scrollTop = el.scrollTop;\n    var status = '11';\n\n    if (scrollTop === 0) {\n      status = offsetHeight >= scrollHeight ? '00' : '01';\n    } else if (scrollTop + offsetHeight >= scrollHeight) {\n      status = '10';\n    }\n\n    if (status !== '11' && touch.isVertical() && !(parseInt(status, 2) & parseInt(direction, 2))) {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  var lock = function lock() {\n    document.addEventListener('touchstart', touch.start);\n    document.addEventListener('touchmove', onTouchMove, supportsPassive ? {\n      passive: false\n    } : false);\n\n    if (!totalLockCount) {\n      document.body.classList.add(BODY_LOCK_CLASS);\n    }\n\n    totalLockCount++;\n  };\n\n  var unlock = function unlock() {\n    if (totalLockCount) {\n      document.removeEventListener('touchstart', touch.start);\n      document.removeEventListener('touchmove', onTouchMove);\n      totalLockCount--;\n\n      if (!totalLockCount) {\n        document.body.classList.remove(BODY_LOCK_CLASS);\n      }\n    }\n  };\n\n  useEffect(function () {\n    if (shouldLock) {\n      lock();\n      return function () {\n        unlock();\n      };\n    }\n  }, [shouldLock]);\n}","map":{"version":3,"sources":["/Users/brandonliu/Project/goairmart/antd-demo/node_modules/antd-mobile/es/utils/use-lock-scroll.js"],"names":["useTouch","useEffect","getScrollParent","supportsPassive","totalLockCount","BODY_LOCK_CLASS","useLockScroll","rootRef","shouldLock","touch","onTouchMove","event","move","direction","deltaY","current","el","target","scrollHeight","offsetHeight","scrollTop","status","isVertical","parseInt","cancelable","preventDefault","lock","document","addEventListener","start","passive","body","classList","add","unlock","removeEventListener","remove"],"mappings":"AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,IAAIC,cAAc,GAAG,CAArB;AACA,IAAIC,eAAe,GAAG,qBAAtB,C,CAA6C;;AAE7C,OAAO,SAASC,aAAT,CAAuBC,OAAvB,EAAgCC,UAAhC,EAA4C;AACjD,MAAIC,KAAK,GAAGT,QAAQ,EAApB;;AAEA,MAAIU,WAAW,GAAG,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC5CF,IAAAA,KAAK,CAACG,IAAN,CAAWD,KAAX;AACA,QAAIE,SAAS,GAAGJ,KAAK,CAACK,MAAN,CAAaC,OAAb,GAAuB,CAAvB,GAA2B,IAA3B,GAAkC,IAAlD;AACA,QAAIC,EAAE,GAAGd,eAAe,CAACS,KAAK,CAACM,MAAP,EAAeV,OAAO,CAACQ,OAAvB,CAAxB;AACA,QAAI,CAACC,EAAL,EAAS;AACT,QAAIE,YAAY,GAAGF,EAAE,CAACE,YAAtB;AAAA,QACIC,YAAY,GAAGH,EAAE,CAACG,YADtB;AAAA,QAEIC,SAAS,GAAGJ,EAAE,CAACI,SAFnB;AAGA,QAAIC,MAAM,GAAG,IAAb;;AAEA,QAAID,SAAS,KAAK,CAAlB,EAAqB;AACnBC,MAAAA,MAAM,GAAGF,YAAY,IAAID,YAAhB,GAA+B,IAA/B,GAAsC,IAA/C;AACD,KAFD,MAEO,IAAIE,SAAS,GAAGD,YAAZ,IAA4BD,YAAhC,EAA8C;AACnDG,MAAAA,MAAM,GAAG,IAAT;AACD;;AAED,QAAIA,MAAM,KAAK,IAAX,IAAmBZ,KAAK,CAACa,UAAN,EAAnB,IAAyC,EAAEC,QAAQ,CAACF,MAAD,EAAS,CAAT,CAAR,GAAsBE,QAAQ,CAACV,SAAD,EAAY,CAAZ,CAAhC,CAA7C,EAA8F;AAC5F,UAAIF,KAAK,CAACa,UAAV,EAAsB;AACpBb,QAAAA,KAAK,CAACc,cAAN;AACD;AACF;AACF,GArBD;;AAuBA,MAAIC,IAAI,GAAG,SAASA,IAAT,GAAgB;AACzBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,YAA1B,EAAwCnB,KAAK,CAACoB,KAA9C;AACAF,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuClB,WAAvC,EAAoDP,eAAe,GAAG;AACpE2B,MAAAA,OAAO,EAAE;AAD2D,KAAH,GAE/D,KAFJ;;AAIA,QAAI,CAAC1B,cAAL,EAAqB;AACnBuB,MAAAA,QAAQ,CAACI,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B5B,eAA5B;AACD;;AAEDD,IAAAA,cAAc;AACf,GAXD;;AAaA,MAAI8B,MAAM,GAAG,SAASA,MAAT,GAAkB;AAC7B,QAAI9B,cAAJ,EAAoB;AAClBuB,MAAAA,QAAQ,CAACQ,mBAAT,CAA6B,YAA7B,EAA2C1B,KAAK,CAACoB,KAAjD;AACAF,MAAAA,QAAQ,CAACQ,mBAAT,CAA6B,WAA7B,EAA0CzB,WAA1C;AACAN,MAAAA,cAAc;;AAEd,UAAI,CAACA,cAAL,EAAqB;AACnBuB,QAAAA,QAAQ,CAACI,IAAT,CAAcC,SAAd,CAAwBI,MAAxB,CAA+B/B,eAA/B;AACD;AACF;AACF,GAVD;;AAYAJ,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIO,UAAJ,EAAgB;AACdkB,MAAAA,IAAI;AACJ,aAAO,YAAY;AACjBQ,QAAAA,MAAM;AACP,OAFD;AAGD;AACF,GAPQ,EAON,CAAC1B,UAAD,CAPM,CAAT;AAQD","sourcesContent":["import { useTouch } from './use-touch';\nimport { useEffect } from 'react';\nimport { getScrollParent } from './get-scroll-parent';\nimport { supportsPassive } from './supports-passive';\nvar totalLockCount = 0;\nvar BODY_LOCK_CLASS = 'adm-overflow-hidden'; // 移植自vant：https://github.com/youzan/vant/blob/HEAD/src/composables/use-lock-scroll.ts\n\nexport function useLockScroll(rootRef, shouldLock) {\n  var touch = useTouch();\n\n  var onTouchMove = function onTouchMove(event) {\n    touch.move(event);\n    var direction = touch.deltaY.current > 0 ? '10' : '01';\n    var el = getScrollParent(event.target, rootRef.current);\n    if (!el) return;\n    var scrollHeight = el.scrollHeight,\n        offsetHeight = el.offsetHeight,\n        scrollTop = el.scrollTop;\n    var status = '11';\n\n    if (scrollTop === 0) {\n      status = offsetHeight >= scrollHeight ? '00' : '01';\n    } else if (scrollTop + offsetHeight >= scrollHeight) {\n      status = '10';\n    }\n\n    if (status !== '11' && touch.isVertical() && !(parseInt(status, 2) & parseInt(direction, 2))) {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  var lock = function lock() {\n    document.addEventListener('touchstart', touch.start);\n    document.addEventListener('touchmove', onTouchMove, supportsPassive ? {\n      passive: false\n    } : false);\n\n    if (!totalLockCount) {\n      document.body.classList.add(BODY_LOCK_CLASS);\n    }\n\n    totalLockCount++;\n  };\n\n  var unlock = function unlock() {\n    if (totalLockCount) {\n      document.removeEventListener('touchstart', touch.start);\n      document.removeEventListener('touchmove', onTouchMove);\n      totalLockCount--;\n\n      if (!totalLockCount) {\n        document.body.classList.remove(BODY_LOCK_CLASS);\n      }\n    }\n  };\n\n  useEffect(function () {\n    if (shouldLock) {\n      lock();\n      return function () {\n        unlock();\n      };\n    }\n  }, [shouldLock]);\n}"]},"metadata":{},"sourceType":"module"}